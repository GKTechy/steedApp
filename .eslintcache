[{"E:\\Friends\\Selva\\steedApp\\src\\index.js":"1","E:\\Friends\\Selva\\steedApp\\src\\reportWebVitals.js":"2","E:\\Friends\\Selva\\steedApp\\src\\App.js":"3","E:\\Friends\\Selva\\steedApp\\src\\redux\\store.js":"4","E:\\Friends\\Selva\\steedApp\\src\\ProtectedRoute.js":"5","E:\\Friends\\Selva\\steedApp\\src\\components\\Dashboard.js":"6","E:\\Friends\\Selva\\steedApp\\src\\components\\Login.js":"7","E:\\Friends\\Selva\\steedApp\\src\\redux\\reducers.js":"8","E:\\Friends\\Selva\\steedApp\\src\\components\\Content.js":"9","E:\\Friends\\Selva\\steedApp\\src\\components\\Header.js":"10","E:\\Friends\\Selva\\steedApp\\src\\redux\\Types.js":"11","E:\\Friends\\Selva\\steedApp\\src\\components\\IndexDashboard.js":"12","E:\\Friends\\Selva\\steedApp\\src\\components\\production\\ProductionMaster.js":"13","E:\\Friends\\Selva\\steedApp\\src\\components\\admin\\AdminTransaction.js":"14","E:\\Friends\\Selva\\steedApp\\src\\components\\ped\\PEDMaster.js":"15","E:\\Friends\\Selva\\steedApp\\src\\components\\admin\\AdminMaster.js":"16","E:\\Friends\\Selva\\steedApp\\src\\components\\commercial\\CommercialAdmin.js":"17","E:\\Friends\\Selva\\steedApp\\src\\components\\production\\ProductionReport.js":"18","E:\\Friends\\Selva\\steedApp\\src\\components\\production\\productionTransaction.js":"19","E:\\Friends\\Selva\\steedApp\\src\\components\\commercial\\CommercialTransaction.js":"20","E:\\Friends\\Selva\\steedApp\\src\\components\\commercial\\CommercialReport.js":"21","E:\\Friends\\Selva\\steedApp\\src\\components\\quality\\QualityTransaction.js":"22","E:\\Friends\\Selva\\steedApp\\src\\components\\materials\\MaterialTransaction.js":"23","E:\\Friends\\Selva\\steedApp\\src\\components\\materials\\MaterialMaster.js":"24","E:\\Friends\\Selva\\steedApp\\src\\components\\quality\\QualityReport.js":"25","E:\\Friends\\Selva\\steedApp\\src\\components\\materials\\MaterialReport.js":"26","E:\\Friends\\Selva\\steedApp\\src\\components\\quality\\QualityMaster.js":"27","E:\\Friends\\Selva\\steedApp\\src\\components\\admin\\UserRoleMapping.js":"28","E:\\Friends\\Selva\\steedApp\\src\\components\\admin\\ManageUsers.js":"29","E:\\Friends\\Selva\\steedApp\\src\\components\\quality\\CSRegeneration.js":"30","E:\\Friends\\Selva\\steedApp\\src\\components\\quality\\CSGeneration.js":"31","E:\\Friends\\Selva\\steedApp\\src\\components\\production\\Machine.js":"32","E:\\Friends\\Selva\\steedApp\\src\\components\\ped\\PedProcess.js":"33","E:\\Friends\\Selva\\steedApp\\src\\components\\ped\\Bom.js":"34","E:\\Friends\\Selva\\steedApp\\src\\components\\ped\\PedProduct.js":"35","E:\\Friends\\Selva\\steedApp\\src\\components\\ped\\PedProcessFlow.js":"36","E:\\Friends\\Selva\\steedApp\\src\\components\\ped\\PedProuductVarient.js":"37","E:\\Friends\\Selva\\steedApp\\src\\components\\production\\MachineProcessMap.js":"38","E:\\Friends\\Selva\\steedApp\\src\\components\\commercial\\DealerOrder.js":"39","E:\\Friends\\Selva\\steedApp\\src\\components\\materials\\Material.js":"40","E:\\Friends\\Selva\\steedApp\\src\\components\\admin\\NoteForApproval.js":"41","E:\\Friends\\Selva\\steedApp\\src\\components\\materials\\MaterialType.js":"42","E:\\Friends\\Selva\\steedApp\\src\\components\\materials\\PaymentTerm.js":"43","E:\\Friends\\Selva\\steedApp\\src\\components\\materials\\UOM.js":"44","E:\\Friends\\Selva\\steedApp\\src\\components\\commercial\\Dealer.js":"45","E:\\Friends\\Selva\\steedApp\\src\\components\\admin\\Roles.js":"46","E:\\Friends\\Selva\\steedApp\\src\\components\\materials\\Supplier.js":"47","E:\\Friends\\Selva\\steedApp\\src\\components\\UserProfile.js":"48","E:\\Friends\\Selva\\steedApp\\src\\redux\\actions.js":"49","E:\\Friends\\Selva\\steedApp\\src\\components\\ConnectedIntermediateComponent.js":"50"},{"size":697,"mtime":1616129036693,"results":"51","hashOfConfig":"52"},{"size":375,"mtime":1615616450156,"results":"53","hashOfConfig":"52"},{"size":1190,"mtime":1621308302652,"results":"54","hashOfConfig":"52"},{"size":378,"mtime":1616129036723,"results":"55","hashOfConfig":"52"},{"size":508,"mtime":1615616450148,"results":"56","hashOfConfig":"52"},{"size":11717,"mtime":1631889170320,"results":"57","hashOfConfig":"52"},{"size":6378,"mtime":1632224369452,"results":"58","hashOfConfig":"52"},{"size":1276,"mtime":1631876485339,"results":"59","hashOfConfig":"52"},{"size":3387,"mtime":1621002226089,"results":"60","hashOfConfig":"52"},{"size":7178,"mtime":1615616450148,"results":"61","hashOfConfig":"52"},{"size":242,"mtime":1621268684464,"results":"62","hashOfConfig":"52"},{"size":449,"mtime":1621004394517,"results":"63","hashOfConfig":"52"},{"size":2566,"mtime":1615616450155,"results":"64","hashOfConfig":"52"},{"size":2151,"mtime":1621182836154,"results":"65","hashOfConfig":"52"},{"size":4286,"mtime":1617863873381,"results":"66","hashOfConfig":"52"},{"size":3069,"mtime":1615616450149,"results":"67","hashOfConfig":"52"},{"size":2913,"mtime":1619066779423,"results":"68","hashOfConfig":"52"},{"size":4920,"mtime":1615616450155,"results":"69","hashOfConfig":"52"},{"size":3929,"mtime":1615616450155,"results":"70","hashOfConfig":"52"},{"size":2550,"mtime":1615616450151,"results":"71","hashOfConfig":"52"},{"size":3034,"mtime":1615616450151,"results":"72","hashOfConfig":"52"},{"size":2807,"mtime":1615616450156,"results":"73","hashOfConfig":"52"},{"size":8627,"mtime":1615616450153,"results":"74","hashOfConfig":"52"},{"size":3941,"mtime":1615620153692,"results":"75","hashOfConfig":"52"},{"size":3245,"mtime":1615616450155,"results":"76","hashOfConfig":"52"},{"size":3778,"mtime":1615616450152,"results":"77","hashOfConfig":"52"},{"size":3561,"mtime":1615616450155,"results":"78","hashOfConfig":"52"},{"size":10393,"mtime":1621308731924,"results":"79","hashOfConfig":"52"},{"size":15658,"mtime":1621308784063,"results":"80","hashOfConfig":"52"},{"size":3507,"mtime":1615616450155,"results":"81","hashOfConfig":"52"},{"size":8223,"mtime":1615616450155,"results":"82","hashOfConfig":"52"},{"size":19008,"mtime":1621308534302,"results":"83","hashOfConfig":"52"},{"size":9682,"mtime":1621308592332,"results":"84","hashOfConfig":"52"},{"size":11971,"mtime":1621308600861,"results":"85","hashOfConfig":"52"},{"size":20474,"mtime":1621308619133,"results":"86","hashOfConfig":"52"},{"size":12262,"mtime":1621308576909,"results":"87","hashOfConfig":"52"},{"size":10261,"mtime":1621308554997,"results":"88","hashOfConfig":"52"},{"size":10762,"mtime":1631888474358,"results":"89","hashOfConfig":"52"},{"size":32628,"mtime":1621308713272,"results":"90","hashOfConfig":"52"},{"size":24031,"mtime":1621308674137,"results":"91","hashOfConfig":"52"},{"size":17560,"mtime":1621308763765,"results":"92","hashOfConfig":"52"},{"size":12143,"mtime":1621308651215,"results":"93","hashOfConfig":"52"},{"size":11354,"mtime":1621308656836,"results":"94","hashOfConfig":"52"},{"size":15533,"mtime":1621308613125,"results":"95","hashOfConfig":"52"},{"size":31668,"mtime":1621308709125,"results":"96","hashOfConfig":"52"},{"size":10038,"mtime":1632224258106,"results":"97","hashOfConfig":"52"},{"size":22721,"mtime":1621308632565,"results":"98","hashOfConfig":"52"},{"size":5185,"mtime":1621308743131,"results":"99","hashOfConfig":"52"},{"size":561,"mtime":1621269899125,"results":"100","hashOfConfig":"52"},{"size":1695,"mtime":1621308243752,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"lps3sz",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"104"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"104"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"104"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"104"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"104"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"104"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"104"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"104"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"104"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"104"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"104"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Friends\\Selva\\steedApp\\src\\index.js",[],["215","216"],"E:\\Friends\\Selva\\steedApp\\src\\reportWebVitals.js",[],"E:\\Friends\\Selva\\steedApp\\src\\App.js",[],"E:\\Friends\\Selva\\steedApp\\src\\redux\\store.js",[],"E:\\Friends\\Selva\\steedApp\\src\\ProtectedRoute.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\Dashboard.js",["217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247"],"import React, { Component } from 'react'\r\nimport {  Switch,  Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport Header from './Header'\r\nimport Content from './Content';\r\n\r\nexport class Dashboard extends Component {  \r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          islogout: false,\r\n          userMenus:[],\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        //console.log(\"steedUserMenus-->\"+JSON.stringify(localStorage.getItem(\"steedUserMenus\")))\r\n      \r\n       this.setState({userMenus: localStorage.getItem(\"steedUserMenus\")})\r\n    //   console.log(\"componentDidMount userMenus-->\"+this.state.userMenus)\r\n\r\n    }\r\n\r\n    render() {\r\n       // console.log(\"render userMenus-->\"+this.state.userMenus)\r\n        //console.log(\"render userMenus- length ->\"+this.state.userMenus.length)\r\n        const { match } = this.props;\r\n        return (\r\n            \r\n            \r\n            <div>\r\n                \r\n                    <Header/>\r\n                    <aside className=\"main-sidebar sidebar-dark-primary elevation-4\">\r\n                    <a href=\"#\" className=\"brand-link\">\r\n                        <span className=\"brand-text font-weight-light\">Steed App</span>\r\n                        \r\n                    </a>\r\n                <div className=\"sidebar\">\r\n              \r\n                    <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\r\n                    <div className=\"image\">\r\n                        {/* <img src=\"dist/img/avatar5.png\" className=\"img-circle elevation-2\" alt=\"User Image\" /> */}\r\n                        <img alt=\"Avatar\" className=\"img-circle\" src=\"../../dist/img/avatar5.png\"></img>\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <Link to={`${match.path}/userProfile`}>  <a href=\"#\" className=\"d-block\">User 1</a></Link>\r\n                    </div>\r\n                    </div>\r\n               \r\n                    <nav className=\"mt-2\">\r\n                        <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"true\">\r\n                            \r\n                           \r\n\r\n                            \r\n                                 <li className=\"nav-item\"><a href=\"#\" className=\"nav-link\"><i className=\"nav-icon fas fa-users-cog\"/><p>Admin </p></a>\r\n                                  \r\n                                    <ul className=\"nav nav-treeview\">\r\n                                        <li className=\"nav-item\">\r\n                                            <Link to={`${match.path}/adminMaster`} > <a href=\"#\" className=\"nav-link active\"><i className=\"far fa-envelope nav-icon\" /><p>Master </p></a></Link>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <Link to={`${match.path}/adminTransaction`} > <a href=\"#\" className=\"nav-link\"><i className=\"far fa-edit nav-icon\" /><p>Transaction </p></a></Link>\r\n                                        </li>\r\n                                        \r\n                                </ul>\r\n\r\n                            </li>\r\n\r\n                            <li className=\"nav-item\"><a href=\"#\" className=\"nav-link\"><i className=\"nav-icon fas fa-industry\" /><p>Production</p></a>\r\n                                <ul className=\"nav nav-treeview\">\r\n                                        <li className=\"nav-item\">\r\n                                            <Link to={`${match.path}/productionMaster`} > <a href=\"#\" className=\"nav-link\"><i className=\"far fa-envelope nav-icon\" /><p>Master <i className=\"right fas fa-angle-left\"></i></p></a></Link>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <Link to={`${match.path}/productionTransaction`} > <a href=\"#\" className=\"nav-link\"><i className=\"far fa-edit nav-icon\" /><p>Transaction <i className=\"right fas fa-angle-left\"></i></p></a></Link>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <Link to={`${match.path}/productionReport`} > <a href=\"#\" className=\"nav-link\"><i className=\"far fa-file nav-icon\" /><p>Reports <i className=\"right fas fa-angle-left\"></i></p></a></Link>\r\n                                        </li>\r\n                                </ul>\r\n                            </li>\r\n                            <li className=\"nav-item\"><a href=\"#\" className=\"nav-link\"><i className=\"nav-icon fas fa-chart-pie\" /><p>Commercial</p></a>\r\n                                <ul className=\"nav nav-treeview\">\r\n                                        <li className=\"nav-item\">\r\n                                            <Link to={`${match.path}/commercialMaster`}> <a href=\"#\" className=\"nav-link\"><i className=\"far fa-envelope nav-icon\" /><p>Master <i className=\"right fas fa-angle-left\"></i></p></a></Link>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                             <Link to={`${match.path}/commercialTransaction`}> <a href=\"#\" className=\"nav-link\"><i className=\"far fa-edit nav-icon\" /><p>Transaction <i className=\"right fas fa-angle-left\"></i></p></a></Link>\r\n                                        </li> \r\n                                        <li className=\"nav-item\">\r\n                                            <Link to={`${match.path}/commercialReports`}> <a href=\"#\" className=\"nav-link\"><i className=\"far fa-file nav-icon\" /><p>Reports <i className=\"right fas fa-angle-left\"></i></p></a></Link>\r\n                                       </li>\r\n                                    </ul>\r\n                            </li>\r\n                            <li className=\"nav-item\"><a href=\"#\" className=\"nav-link\"><i className=\"nav-icon fas fa-balance-scale\" /><p>Accounts</p></a>\r\n                                    <ul className=\"nav nav-treeview\">\r\n                                        <li className=\"nav-item\"><a href=\"#\" className=\"nav-link\"><i className=\"far fa-circle nav-icon\" /><p>Accounts 1</p></a></li>\r\n                                        <li className=\"nav-item\"><a href=\"#\" className=\"nav-link\"><i className=\"far fa-circle nav-icon\" /><p>Accounts 2</p></a></li>\r\n                                        <li className=\"nav-item\"><a href=\"#\" className=\"nav-link\"><i className=\"far fa-circle nav-icon\" /><p>Accounts 3</p></a></li>\r\n                                    </ul>\r\n                            </li>\r\n                            <li className=\"nav-item\"><a href=\"#\" className=\"nav-link\"><i className=\"nav-icon fas fa-search-dollar\" /><p>Quality</p></a>\r\n                                <ul className=\"nav nav-treeview\">\r\n                                        <li className=\"nav-item\">\r\n                                            <Link to={`${match.path}/qualityMaster`}  > <a href=\"#\" className=\"nav-link\"><i className=\"far fa-envelope nav-icon\" /><p>Master <i className=\"right fas fa-angle-left\"></i></p></a></Link>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <Link to={`${match.path}/qualityTransaction`}  > <a href=\"#\" className=\"nav-link\"><i className=\"far fa-edit nav-icon\" /><p>Transaction <i className=\"right fas fa-angle-left\"></i></p></a></Link>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                         <Link to={`${match.path}/qualityReport`}  > <a href=\"#\" className=\"nav-link\"><i className=\"far fa-file nav-icon\" /><p>Reports <i className=\"right fas fa-angle-left\"></i></p></a></Link>\r\n                                        </li>\r\n                                </ul>\r\n                            </li>\r\n                            <li className=\"nav-item\"><a href=\"#\" className=\"nav-link\"><i className=\"nav-icon fas fa-people-carry\" /><p>Materials</p></a>\r\n                                <ul className=\"nav nav-treeview\">\r\n                                        <li className=\"nav-item\">\r\n                                            <Link to={`${match.path}/materialMaster`}   > <a href=\"#\" className=\"nav-link\"><i className=\"far fa-envelope nav-icon\" /><p>Master <i className=\"right fas fa-angle-left\"></i></p></a></Link>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <Link to={`${match.path}/materialTransaction`}  > <a href=\"#\" className=\"nav-link\"><i className=\"far fa-edit nav-icon\" /><p>Transaction <i className=\"right fas fa-angle-left\"></i></p></a></Link>\r\n                                         </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <Link to={`${match.path}/materialReport`} > <a href=\"#\" className=\"nav-link\"><i className=\"far fa-file nav-icon\" /><p>Reports <i className=\"right fas fa-angle-left\"></i></p></a></Link>\r\n                                        </li>\r\n                                </ul>\r\n                            </li>\r\n                            <li className=\"nav-item\"><a href=\"#\" className=\"nav-link\"><i className=\"nav-icon fas fa-cogs\" /><p>PED </p></a>\r\n                                    <ul className=\"nav nav-treeview\">\r\n                                    <li className=\"nav-item\">\r\n                                        <Link to={`${match.path}/PEDMaster`}   > <a href=\"#\" className=\"nav-link\"><i className=\"far fa-envelope nav-icon\" /><p>Master </p></a></Link>\r\n                                    </li>\r\n                                    </ul>\r\n                            </li>\r\n\r\n                        \r\n\r\n                            <li className=\"nav-item\"><a href=\"#\" className=\"nav-link\"><i className=\"nav-icon fas fa-tools\" /><p>Maintenance</p></a>\r\n                                    <ul className=\"nav nav-treeview\">\r\n                                        <li className=\"nav-item\"><a href=\"#\" className=\"nav-link\"><i className=\"far fa-circle nav-icon\" /><p>ChartJS</p></a></li>\r\n                                        <li className=\"nav-item\"><a href=\"#\" className=\"nav-link\"><i className=\"far fa-circle nav-icon\" /><p>ChartJS</p></a></li>\r\n                                        <li className=\"nav-item\"><a href=\"#\" className=\"nav-link\"><i className=\"far fa-circle nav-icon\" /><p>ChartJS</p></a></li>\r\n                                    </ul>\r\n                            </li> \r\n                          \r\n                        </ul>\r\n                        </nav>\r\n                    \r\n                     </div>\r\n                \r\n                </aside>\r\n                        <main role=\"main\">\r\n                            <div className=\"main\">\r\n                            \r\n                                <Switch>\r\n                                <Content/>\r\n                                </Switch>\r\n                            </div>\r\n                            </main>\r\n               \r\n           \r\n          </div>\r\n          \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      profile: state.user.profile,\r\n      apiurl: state.user.apiurl,\r\n      usermenus: state.user.usermenus,\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(withRouter(Dashboard));\r\n\r\n\r\n//export default withRouter(Dashboard);\r\n","E:\\Friends\\Selva\\steedApp\\src\\components\\Login.js",["248","249"],"E:\\Friends\\Selva\\steedApp\\src\\redux\\reducers.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\Content.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\Header.js",["250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267"],"import React, { Component } from 'react'\r\nimport { Redirect, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nexport class Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          islogout: false\r\n        };\r\n      }\r\n\r\n\r\n    signOut = () => {\r\n        localStorage.removeItem(\"steedApptoken\");\r\n        this.setState({\r\n          islogout: true\r\n        });\r\n      };\r\n\r\n\r\n\r\n    render() {\r\n\r\n        if (this.state.islogout) {\r\n            return <Redirect to=\"/login\" />;\r\n          }\r\n        const { match } = this.props;\r\n\r\n\r\n\r\n        return (\r\n           \r\n        <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\r\n        {/* Left navbar links */}\r\n        <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n            <a className=\"nav-link\" data-widget=\"pushmenu\" href=\"#\" role=\"button\"><i className=\"fas fa-bars\" /></a>\r\n            </li>\r\n            <li className=\"nav-item d-none d-sm-inline-block\">\r\n            {/* <a href=\"#\" className=\"nav-link\">Home</a> */}\r\n            <Link to=\"/\"> <a href=\"#\" className=\"nav-link\">Home</a></Link>\r\n            </li>\r\n            <li className=\"nav-item d-none d-sm-inline-block\">\r\n            <a href=\"#\" className=\"nav-link\">Contact</a>\r\n            </li>\r\n        </ul>\r\n        {/* SEARCH FORM */}\r\n        <form className=\"form-inline ml-3\">\r\n            <div className=\"input-group input-group-sm\">\r\n            <input className=\"form-control form-control-navbar\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <div className=\"input-group-append\">\r\n                <button className=\"btn btn-navbar\" type=\"submit\">\r\n                <i className=\"fas fa-search\" />\r\n                </button>\r\n            </div>\r\n            </div>\r\n        </form>\r\n        {/* Right navbar links */}\r\n        <ul className=\"navbar-nav ml-auto\">\r\n            {/* Messages Dropdown Menu */}\r\n            <li className=\"nav-item dropdown\">\r\n            <a className=\"nav-link\" data-toggle=\"dropdown\" href=\"#\">\r\n                <i className=\"far fa-comments\" />\r\n                <span className=\"badge badge-danger navbar-badge\">3</span>\r\n            </a>\r\n            <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right\">\r\n                <a href=\"#\" className=\"dropdown-item\">\r\n                {/* Message Start */}\r\n                <div className=\"media\">\r\n                    <img src=\"dist/img/user1-128x128.jpg\" alt=\"User Avatar\" className=\"img-size-50 mr-3 img-circle\" />\r\n                    <div className=\"media-body\">\r\n                    <h3 className=\"dropdown-item-title\">\r\n                        Brad Diesel\r\n                        <span className=\"float-right text-sm text-danger\"><i className=\"fas fa-star\" /></span>\r\n                    </h3>\r\n                    <p className=\"text-sm\">Call me whenever you can...</p>\r\n                    <p className=\"text-sm text-muted\"><i className=\"far fa-clock mr-1\" /> 4 Hours Ago</p>\r\n                    </div>\r\n                </div>\r\n                {/* Message End */}\r\n                </a>\r\n                <div className=\"dropdown-divider\" />\r\n                <a href=\"#\" className=\"dropdown-item\">\r\n                {/* Message Start */}\r\n                <div className=\"media\">\r\n                    <img src=\"dist/img/user8-128x128.jpg\" alt=\"User Avatar\" className=\"img-size-50 img-circle mr-3\" />\r\n                    <div className=\"media-body\">\r\n                    <h3 className=\"dropdown-item-title\">\r\n                        John Pierce\r\n                        <span className=\"float-right text-sm text-muted\"><i className=\"fas fa-star\" /></span>\r\n                    </h3>\r\n                    <p className=\"text-sm\">I got your message bro</p>\r\n                    <p className=\"text-sm text-muted\"><i className=\"far fa-clock mr-1\" /> 4 Hours Ago</p>\r\n                    </div>\r\n                </div>\r\n                {/* Message End */}\r\n                </a>\r\n                <div className=\"dropdown-divider\" />\r\n                <a href=\"#\" className=\"dropdown-item\">\r\n                {/* Message Start */}\r\n                <div className=\"media\">\r\n                    <img src=\"dist/img/user3-128x128.jpg\" alt=\"User Avatar\" className=\"img-size-50 img-circle mr-3\" />\r\n                    <div className=\"media-body\">\r\n                    <h3 className=\"dropdown-item-title\">\r\n                        Nora Silvester\r\n                        <span className=\"float-right text-sm text-warning\"><i className=\"fas fa-star\" /></span>\r\n                    </h3>\r\n                    <p className=\"text-sm\">The subject goes here</p>\r\n                    <p className=\"text-sm text-muted\"><i className=\"far fa-clock mr-1\" /> 4 Hours Ago</p>\r\n                    </div>\r\n                </div>\r\n                {/* Message End */}\r\n                </a>\r\n                <div className=\"dropdown-divider\" />\r\n                <a href=\"#\" className=\"dropdown-item dropdown-footer\">See All Messages</a>\r\n            </div>\r\n            </li>\r\n            {/* Notifications Dropdown Menu */}\r\n            <li className=\"nav-item dropdown\">\r\n            <a className=\"nav-link\" data-toggle=\"dropdown\" href=\"#\">\r\n                <i className=\"far fa-bell\" />\r\n                <span className=\"badge badge-warning navbar-badge\">15</span>\r\n            </a>\r\n            <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right\">\r\n                <span className=\"dropdown-item dropdown-header\">15 Notifications</span>\r\n                <div className=\"dropdown-divider\" />\r\n                <a href=\"#\" className=\"dropdown-item\">\r\n                <i className=\"fas fa-envelope mr-2\" /> 4 new messages\r\n                <span className=\"float-right text-muted text-sm\">3 mins</span>\r\n                </a>\r\n                <div className=\"dropdown-divider\" />\r\n                <a href=\"#\" className=\"dropdown-item\">\r\n                <i className=\"fas fa-users mr-2\" /> 8 friend requests\r\n                <span className=\"float-right text-muted text-sm\">12 hours</span>\r\n                </a>\r\n                <div className=\"dropdown-divider\" />\r\n                <a href=\"#\" className=\"dropdown-item\">\r\n                <i className=\"fas fa-file mr-2\" /> 3 new reports\r\n                <span className=\"float-right text-muted text-sm\">2 days</span>\r\n                </a>\r\n                <div className=\"dropdown-divider\" />\r\n                <a href=\"#\" className=\"dropdown-item dropdown-footer\">See All Notifications</a>\r\n            </div>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n            <a className=\"nav-link\" data-widget=\"fullscreen\" href=\"#\" role=\"button\">\r\n                <i className=\"fas fa-expand-arrows-alt\" />\r\n            </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n            <a className=\"nav-link\" data-widget=\"control-sidebar\" data-slide=\"true\" href=\"#\" role=\"button\" onClick={this.signOut}>\r\n                <i className=\"fas fa-sign-out-alt\" />\r\n            </a>\r\n            </li>\r\n        </ul>\r\n        </nav>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header\r\n","E:\\Friends\\Selva\\steedApp\\src\\redux\\Types.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\IndexDashboard.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\production\\ProductionMaster.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\admin\\AdminTransaction.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\ped\\PEDMaster.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\admin\\AdminMaster.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\commercial\\CommercialAdmin.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\production\\ProductionReport.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\production\\productionTransaction.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\commercial\\CommercialTransaction.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\commercial\\CommercialReport.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\quality\\QualityTransaction.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\materials\\MaterialTransaction.js",["268"],"import React, { Component } from 'react'\r\n\r\nexport class MaterialTransaction extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n            <div className=\"content\">\r\n                <section className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-12\">\r\n                        <div className=\"card card-primary card-tabs\">\r\n                                    <div className=\"card-header p-0 pt-1\">\r\n                                    <ul className=\"nav nav-tabs\" id=\"custom-tabs-two-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n                                        <li className=\"pt-2 px-3\"><h3 className=\"card-title\">Material Transaction</h3></li>\r\n                                        <li className=\"nav-item\">\r\n                                        <a className=\"nav-link active\" id=\"custom-tabs-1\" data-toggle=\"pill\" href=\"#tabs-1\" role=\"tab\" aria-controls=\"custom-tabs-1\" aria-selected=\"true\">MRP</a>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <a className=\"nav-link\" id=\"custom-tabs-2\" data-toggle=\"pill\" href=\"#tabs-2\" role=\"tab\" aria-controls=\"custom-tabs-22\" aria-selected=\"false\">Purchase Indent</a>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <a className=\"nav-link\" id=\"custom-tabs-3\" data-toggle=\"pill\" href=\"#tabs-3\" role=\"tab\" aria-controls=\"custom-tabs-3\" aria-selected=\"false\">Purchase Indent Process</a>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <a className=\"nav-link\" id=\"custom-tabs-4\" data-toggle=\"pill\" href=\"#tabs-4\" role=\"tab\" aria-controls=\"custom-tabs-44\" aria-selected=\"false\">PO</a>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <a className=\"nav-link\" id=\"custom-tabs-5\" data-toggle=\"pill\" href=\"#tabs-5\" role=\"tab\" aria-controls=\"custom-tabs-55\" aria-selected=\"false\">Payment Terms</a>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <a className=\"nav-link\" id=\"custom-tabs-6\" data-toggle=\"pill\" href=\"#tabs-6\" role=\"tab\" aria-controls=\"custom-tabs-66\" aria-selected=\"false\">MIV General</a>\r\n                                        </li>\r\n                                      \r\n                                        <li className=\"nav-item\">\r\n                                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbardrop\" data-toggle=\"dropdown\">More</a>\r\n                                            <div className=\"dropdown-menu bg-primary\">\r\n                                            <a className=\"dropdown-item \" id=\"custom-tabs-6\" data-toggle=\"pill\" href=\"#tabs-6\"  aria-controls=\"custom-tabs-66\" >MIV EO</a>\r\n                                            <a className=\"dropdown-item \" id=\"custom-tabs-6\" data-toggle=\"pill\" href=\"#tabs-6\"  aria-controls=\"custom-tabs-66\" >MRV</a>\r\n                                            <a className=\"dropdown-item \" id=\"custom-tabs-6\" data-toggle=\"pill\" href=\"#tabs-6\"  aria-controls=\"custom-tabs-66\" >Delivery Challan</a>\r\n                                            <a className=\"dropdown-item \" id=\"custom-tabs-6\" data-toggle=\"pill\" href=\"#tabs-6\"  aria-controls=\"custom-tabs-66\" >Bar Stock Received</a>\r\n                                                <a className=\"dropdown-item \" id=\"custom-tabs-6\" data-toggle=\"pill\" href=\"#tabs-6\"  aria-controls=\"custom-tabs-66\" >Forging/Casting Received Detail</a>\r\n                                                <a className=\"dropdown-item \" id=\"custom-tabs-6\" data-toggle=\"pill\" href=\"#tabs-6\"  aria-controls=\"custom-tabs-66\" >Dispatch Slip (DS)</a>\r\n                                                <a className=\"dropdown-item \" id=\"custom-tabs-6\" data-toggle=\"pill\" href=\"#tabs-6\"  aria-controls=\"custom-tabs-66\" >RawMaterial Length / Weight Details</a>\r\n                                                <a className=\"dropdown-item \" id=\"custom-tabs-6\" data-toggle=\"pill\" href=\"#tabs-6\"  aria-controls=\"custom-tabs-66\" >RawMaterial Issue Details</a>\r\n                                                <a className=\"dropdown-item \" id=\"custom-tabs-6\" data-toggle=\"pill\" href=\"#tabs-6\"  aria-controls=\"custom-tabs-66\" >Stores Invoice</a>\r\n                                                <a className=\"dropdown-item \" id=\"custom-tabs-6\" data-toggle=\"pill\" href=\"#tabs-6\"  aria-controls=\"custom-tabs-66\" >Job Order</a>\r\n\r\n                                             \r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                    </div>\r\n                            <div className=\"card-body\" >\r\n                            <div className=\"tab-content\" id=\"custom-tabs-two-tabContent\">\r\n                                <div className=\"tab-pane fade show active\" id=\"tabs-1\" role=\"tabpanel\" aria-labelledby=\"custom-tabs-11\">\r\n                                    <h1>1</h1>\r\n                                </div>\r\n                                <div className=\"tab-pane fade\" id=\"tabs-2\" role=\"tabpanel\" aria-labelledby=\"custom-tabs-22\">\r\n                                <h1>2</h1>\r\n                                </div>\r\n                                <div className=\"tab-pane fade\" id=\"tabs-3\" role=\"tabpanel\" aria-labelledby=\"custom-tabs-33\">\r\n                                <h1>3</h1>\r\n                                </div>\r\n                                <div className=\"tab-pane fade\" id=\"tabs-4\" role=\"tabpanel\" aria-labelledby=\"custom-tabs-44\">\r\n                                    <h1>4</h1>\r\n                                </div>\r\n                                <div className=\"tab-pane fade\" id=\"tabs-5\" role=\"tabpanel\" aria-labelledby=\"custom-tabs-55\">\r\n                                    <h1>5</h1>\r\n                                </div>\r\n                                <div className=\"tab-pane fade\" id=\"tabs-6\" role=\"tabpanel\" aria-labelledby=\"custom-tabs-66\">\r\n                                        <h1>Hi 6</h1>\r\n                                </div>\r\n                                <div className=\"tab-pane fade\" id=\"tabs-7\" role=\"tabpanel\" aria-labelledby=\"custom-tabs-77\">\r\n                                        <h1>Hi 7</h1>\r\n                                </div>\r\n                                <div className=\"tab-pane fade\" id=\"tabs-8\" role=\"tabpanel\" aria-labelledby=\"custom-tabs-88\">\r\n                                        <h1>Hi 8</h1>\r\n                                </div>\r\n                                <div className=\"tab-pane fade\" id=\"tabs-9\" role=\"tabpanel\" aria-labelledby=\"custom-tabs-99\">\r\n                                        <h1>Hi 9</h1>\r\n                                </div>\r\n                                <div className=\"tab-pane fade\" id=\"tabs-10\" role=\"tabpanel\" aria-labelledby=\"custom-tabs-100\">\r\n                                        <h1>Hi 10</h1>\r\n                                </div>\r\n                                <div className=\"tab-pane fade\" id=\"tabs-11\" role=\"tabpanel\" aria-labelledby=\"custom-tabs-110\">\r\n                                        <h1>Hi 11</h1>\r\n                                </div>\r\n                                <div className=\"tab-pane fade\" id=\"tabs-12\" role=\"tabpanel\" aria-labelledby=\"custom-tabs-120\">\r\n                                        <h1>Hi 12</h1>\r\n                                </div>\r\n                                <div className=\"tab-pane fade\" id=\"tabs-13\" role=\"tabpanel\" aria-labelledby=\"custom-tabs-130\">\r\n                                        <h1>Hi 13</h1>\r\n                                </div>\r\n                                <div className=\"tab-pane fade\" id=\"tabs-6\" role=\"tabpanel\" aria-labelledby=\"custom-tabs-140\">\r\n                                        <h1>Hi 14</h1>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </section>\r\n\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MaterialTransaction\r\n","E:\\Friends\\Selva\\steedApp\\src\\components\\materials\\MaterialMaster.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\quality\\QualityReport.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\materials\\MaterialReport.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\quality\\QualityMaster.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\admin\\UserRoleMapping.js",["269"],"import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport $ from \"jquery\";\r\n\r\n\r\nexport class UserRoleMapping extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n     \r\n        this.columns = [\r\n            {\r\n                key: \"mainMenuName\",\r\n                text: \"Main Menu\",\r\n                sortable: true\r\n            },{\r\n                key: \"subMenuName\",\r\n                text: \"Sub Menu\",\r\n                sortable: true\r\n            },{\r\n                key: \"menuName\",\r\n                text: \"Menu\",\r\n                sortable: true\r\n            },\r\n            {\r\n                key: \"readOnly\",\r\n                text: \"Read\",\r\n                sortable: true,\r\n                cell: (record, index) => {\r\n                    return (\r\n                        <div className=\"form-check\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" name=\"readOnly\" id=\"readOnly\" checked={record.readOnly} onChange={ (e)=>this.selectReadRecord(e,index)} />\r\n                        </div>\r\n                       \r\n                    );\r\n                }\r\n            },\r\n            {\r\n                key: \"readWriteOnly\",\r\n                text: \"Write\",\r\n                sortable: true,\r\n                cell: (record, index) => {\r\n                    return (\r\n                        <div className=\"form-check\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" name=\"readWriteOnly\" id=\"readWriteOnly\" checked={record.readWriteOnly} onChange={ (e)=>this.selectWriteRecord(e,index)} />\r\n                        </div>\r\n                       \r\n                    );\r\n                }\r\n            }\r\n        ];\r\n\r\n        this.config = {\r\n            key_column: 'roleId',\r\n            page_size: 10,\r\n            length_menu: [10, 20, 50],\r\n            show_filter: true,\r\n            show_pagination: true,\r\n            pagination: 'advance',\r\n            filename: \"MenuMapping\",\r\n        }\r\n\r\n        \r\n        this.state = {\r\n            roleId:0,\r\n            active:true,\r\n            showModal:false,\r\n            errormsg:\"\",\r\n            records:[],\r\n            roleList:[],\r\n            menuList:[],\r\n            isLoaded:false,\r\n            loginUser:this.props.profile\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getTableValues();\r\n         \r\n        $(\"#as-react-datatable-container\").find('select').addClass(\"form-control-sm\");\r\n        $(\"#as-react-datatable-container\").find('input').addClass(\"form-control-sm\");\r\n   } \r\n\r\n    getTableValues(){\r\n      //     console.log('MachineProcessMap props profile-->:'+this.props.apiurl)\r\n            fetch(this.props.apiurl+\"role/allRolesModules\")\r\n            .then(res => res.json())\r\n            .then( (result) => {\r\n                   // console.log(\"result-->\"+JSON.stringify(result))\r\n                    if(result.valid){\r\n                        this.setState({\r\n                            roleList: result.roleList,\r\n                            records: result.menuList,\r\n                        },()=>{\r\n                            $(\"#as-react-datatable td\").css({\"padding\":'0.50rem'});\r\n                        });\r\n                    }else{}\r\n                },(error) => {\r\n                }\r\n            )\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        if(event.target.value === 0 || event.target.value === \"0\"){\r\n            this.setState({[event.target.name]: event.target.value});\r\n            this.setState({ records: this.state.records.map( obj => ({...obj, readOnly:false,readWriteOnly:false }))  });\r\n\r\n        }else{\r\n\r\n            this.setState({[event.target.name]: event.target.value});\r\n            fetch(this.props.apiurl+\"role/roleModules?roleId=\"+event.target.value)\r\n                .then(res => res.json())\r\n                .then( (result) => {\r\n                       // console.log(\"result-->\"+JSON.stringify(result))\r\n                        if(result.valid){\r\n                            this.setState({\r\n                                records: result.menuList,\r\n                                errormsg: \"\"\r\n                            });\r\n                        }else{}\r\n                    },(error) => {\r\n                    }\r\n                )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    selectReadRecord = (e,index) => {\r\n        const { records } = this.state;\r\n        let checked=e.target.checked;\r\n        records[index].readOnly = checked;\r\n        this.setState({ records: records },()=>{ \r\n        });\r\n  }\r\n  selectWriteRecord = (e,index) => {\r\n    const { records } = this.state;\r\n    let checked=e.target.checked;\r\n    records[index].readWriteOnly = checked;\r\n    this.setState({ records: records },()=>{ \r\n    });\r\n}\r\n\r\n\r\n saveClick= event =>{\r\n\r\n   //console.log(\"--.\"+this.state.roleId)\r\n\r\n   const { records } = this.state;\r\n   let ronly = records.filter(el => el.readOnly);\r\n   let rwonly = records.filter(el => el.readWriteOnly);\r\n    console.log(\"ronly->\"+rwonly.length);\r\n\r\n    if(this.state.roleId === 0){\r\n        this.setState({\r\n            errormsg: \"Select Role\"\r\n        });\r\n    }else  if(ronly.length=== 0 && rwonly.length=== 0){\r\n        this.setState({\r\n            errormsg: \"Select Menu Details\"\r\n        });\r\n    }else{\r\n        this.setState({\r\n            errormsg: \"\"\r\n        });\r\n\r\n       // console.log(\"this.state.records-->\"+JSON.stringify(this.state.records))\r\n        let mlist=  this.state.records.filter(obj => {\r\n            if( obj.readWriteOnly || obj.readOnly ) return obj\r\n        })\r\n\r\n       // console.log(\"mlist-->\"+mlist)\r\n          // POST request using fetch with error handling\r\n           const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ \"roleId\":this.state.roleId,\"menuList\":mlist})\r\n        };\r\n        fetch(this.props.apiurl+\"role/saveRoleMenu\", requestOptions)\r\n            .then(async response => {\r\n                const data = await response.json();\r\n           //     console.log(\"--data--\"+JSON.stringify(data))\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n\r\n                if(data.valid){\r\n                     //  console.log(\"c role->\"+obj)\r\n                     this.setState({\r\n                        errormsg: \"Successfully Inserted\",\r\n                        records: data.menuList,\r\n                    },()=>{\r\n                        //this.resetClick();\r\n                    });\r\n                   \r\n                }else{\r\n                   this.setState({ errormsg: data.responseMsg});\r\n                  // this.resetClick();\r\n                } \r\n            })\r\n            .catch(error => {\r\n                this.setState({ errormsg: error.toString() });\r\n              //  console.error('There was an error!', error);\r\n            });\r\n   \r\n        }\r\n\r\n }\r\n\r\nrefreshClick = () => {\r\n    this.setState({ records: this.state.records.map( obj => ({...obj, readOnly:false,readWriteOnly:false })) ,roleId:0, errormsg:\"\"});\r\n}\r\n\r\nselectAllClick = () => {\r\n    this.setState({ records: this.state.records.map( obj => ({...obj, readOnly:true,readWriteOnly:true })) });\r\n}\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                    <div className=\"form-inline\">\r\n                                             <label htmlFor=\"inlineFormEmail\" className=\"m-2\">User Role </label>\r\n                                             <select className=\"custom-select\"  id=\"roleId\" name=\"roleId\" value={this.state.roleId} onChange={this.handleChange} >\r\n                                                <option value=\"0\">Select Roles</option>\r\n                                                {this.state.roleList.map(o => (\r\n                                                    <option value={o.roleId}>{o.roleName}</option>\r\n                                                ))}\r\n                                            </select>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                            <button type=\"button\" className=\"btn btn-primary float-right\" onClick={this.saveClick}>Save</button>  &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                            <button type=\"button\" className=\"btn btn-success float-right\" onClick={this.refreshClick}>Clear</button>  &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                            <button type=\"button\" className=\"btn btn-danger float-right\" onClick={this.selectAllClick}>Select All</button>  &nbsp;&nbsp;&nbsp;&nbsp;  \r\n                                            &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                            <span className=\"text-danger float-center\">{this.state.errormsg}</span>\r\n                                   </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"card-body\">\r\n                                <ReactDatatable\r\n                                        config={this.config}\r\n                                        records={this.state.records}\r\n                                        columns={this.columns}/>\r\n               \r\n\r\n                            </div>\r\n                           \r\n                           </div>\r\n                            \r\n                        </div>\r\n                        </div>\r\n                   \r\n                       \r\n                    </div>\r\n                    </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      profile: state.user.profile,\r\n      apiurl: state.user.apiurl\r\n    }\r\n  }\r\n\r\n export default connect(mapStateToProps)(UserRoleMapping);\r\n\r\n\r\n\r\n//export default UserRoleMapping\r\n","E:\\Friends\\Selva\\steedApp\\src\\components\\admin\\ManageUsers.js",["270","271"],"import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport $ from \"jquery\";\r\n\r\n\r\nexport class ManageUsers extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.columns = [\r\n            {\r\n                key: \"userName\",\r\n                text: \"Name\",\r\n                sortable: true\r\n            },\r\n            {\r\n                key: \"userRoles\",\r\n                text: \"Roles\",\r\n                sortable: true\r\n            },\r\n            {\r\n                key: \"status\",\r\n                text: \"Active\",\r\n                sortable: true\r\n            },\r\n            {\r\n                key: \"action\",\r\n                text: \"Action\",\r\n                cell: (record, index) => {\r\n                    return (\r\n                            <button\r\n                                className=\"btn btn-info btn-sm\"\r\n                                onClick={this.editRecord.bind(this, record, index)}\r\n                                style={{marginRight: '5px'}} data-toggle=\"modal\" data-target=\"#user-model\">\r\n                                    <i className=\"fas fa-pencil-alt\"></i>&nbsp;Edit\r\n                            </button>\r\n                       \r\n                    );\r\n                }\r\n            }\r\n        ];\r\n\r\n        this.config = {\r\n            key_column: 'roleId',\r\n            page_size: 10,\r\n            length_menu: [10, 20, 50],\r\n            show_filter: true,\r\n            show_pagination: true,\r\n            pagination: 'advance',\r\n            filename: \"Roles\",\r\n            button: {\r\n                excel: true,\r\n                print: true,\r\n                csv: true\r\n            }\r\n        }\r\n        this.state = {\r\n            userid:0,\r\n            username:\"\",\r\n            userpwd:\"\",\r\n            userconfirmpwd:\"\",\r\n            active:true,\r\n            showModal:false,\r\n            errormsg:\"\",\r\n            records:[],\r\n            roleList:[],\r\n            isLoaded:false,\r\n            loginUser:this.props.profile\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.getTableValues();\r\n//        console.log('props profile-->:'+this.props.apiurl)\r\n        $(\"#as-react-datatable-container\").find('select').addClass(\"form-control-sm\");\r\n        $(\"#as-react-datatable-container\").find('input').addClass(\"form-control-sm\");\r\n     }  \r\n    getTableValues(){\r\n        fetch(this.props.apiurl+\"user/allUsers\")\r\n        .then(res => res.json())\r\n        .then( (result) => {\r\n               // console.log(\"result-->\"+JSON.stringify(result))\r\n                if(result.valid){\r\n                    this.setState({\r\n                        records: result.usersList,\r\n                        roleList: result.roleList,\r\n                    },()=>{\r\n                        $(\"#as-react-datatable td\").css({\"padding\":'0.50rem'});\r\n                    });\r\n                }else{}\r\n            },(error) => {\r\n            }\r\n        )\r\n    }\r\n\r\n    editRecord = (record, index) => {\r\n        // console.log(\"Edit record\", index, record);\r\n        // console.log(\"-->\"+JSON.stringify(record))\r\n        var tempstatus=true;\r\n        if(record.status === \"Active\"){\r\n             tempstatus=true;\r\n         }else{\r\n             tempstatus=false;\r\n         }\r\n         this.setState({\r\n            username:record.userName,\r\n            userid:record.userId,\r\n            userpwd:record.password,\r\n            userconfirmpwd:record.password,\r\n            active:tempstatus,\r\n            errormsg:\"\",\r\n            roleList:  this.state.roleList.map(obj => obj.isChecked ? {...obj, isChecked:false }: obj)\r\n         },()=>{\r\n\r\n            let Troles=record.userRoles.split(\",\");\r\n           //  console.log('roles-->'+JSON.stringify(Troles))\r\n            //  roleList:  this.state.roleList.map(obj => obj.isChecked ? {...obj, isChecked:false }: obj)\r\n            \r\n            Troles.map((tobj) =>{\r\n                this.state.roleList.map((obj,index) => {\r\n                    if( obj.roleName ===  tobj){\r\n                        const {  roleList} = this.state;\r\n                        roleList[index].isChecked = true\r\n                        this.setState({ roleList:roleList},()=>{});\r\n                    }else{\r\n\r\n                    }\r\n                })\r\n              \r\n            })\r\n\r\n         });\r\n\r\n      \r\n        \r\n\r\n     }\r\n\r\n     handleFormChange = event => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    handleCheckClick = () => {\r\n        this.setState({ active: !this.state.active });\r\n    }\r\n\r\n    handleChange= (e,index) => {\r\n        let checked = e.target.checked;\r\n        const {  roleList} = this.state;\r\n        roleList[index].isChecked = checked\r\n\r\n        this.setState({ roleList:roleList},()=>{\r\n        });\r\n\r\n    }\r\n\r\n    saveClick= event =>{\r\n\r\n        const result = this.state.roleList.filter(obj => obj.isChecked);\r\n      //  console.log('result-->'+result.length);\r\n\r\n\r\n        if(this.state.username === \"\"){\r\n            this.setState({\r\n                errormsg: \"Enter User Name\"\r\n            });\r\n        }else if(this.state.userpwd === \"\"){\r\n            this.setState({\r\n                errormsg: \"Enter Password\"\r\n            });\r\n        }else if(this.state.userconfirmpwd === \"\"){\r\n            this.setState({\r\n                errormsg: \"Enter Confirm Password\"\r\n            });\r\n        }else if(this.state.userconfirmpwd !== this.state.userpwd){\r\n            this.setState({\r\n                errormsg: \"Password Can't Match\"\r\n            });\r\n        }else if(!this.state.active && this.state.userid===0){\r\n            this.setState({\r\n                errormsg: \"Select Active\"\r\n            });\r\n        }else if(result.length === 0){\r\n            this.setState({\r\n                errormsg: \"Select Any one Role\"\r\n            });\r\n        }else{\r\n            var tempstatus=\"\"\r\n            if(this.state.active){\r\n                tempstatus=\"Active\"\r\n            }else{\r\n                tempstatus=\"InActive\"\r\n            }\r\n            \r\n            const obj = {'userName':this.state.username,'password': this.state.userpwd, status:tempstatus,'userId':this.state.userid,\"updatedBy\":this.state.loginUser.userId,\"createdBy\":this.state.loginUser.userId};\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ \"userObj\": obj ,\"roleList\":this.state.roleList})\r\n            };\r\n\r\n            fetch(this.props.apiurl+\"user/saveUserList\", requestOptions)\r\n                    .then(async response => {\r\n                        const data = await response.json();\r\n                       // console.log(\"--data--\"+JSON.stringify(data))\r\n                        // check for error response\r\n                        if (!response.ok) {\r\n                            // get error message from body or default to response status\r\n                            const error = (data && data.message) || response.status;\r\n                            return Promise.reject(error);\r\n                        }\r\n\r\n                        if(data.valid){\r\n                            this.setState({ errormsg: \"User Created Successfully\" , records: data.usersList,roleList: data.roleList});\r\n\r\n                        }else{\r\n                          \r\n                        }\r\n                           \r\n                    })\r\n                    .catch(error => {\r\n                        this.setState({ errormsg: error.toString() });\r\n                        \r\n                    });\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resetClick= () => {\r\n        this.setState({ \r\n            userid:0,\r\n            username:\"\",\r\n            userpwd:\"\",\r\n            userconfirmpwd:\"\",\r\n            active:true,\r\n            errormsg:\"\",\r\n            roleList:  this.state.roleList.map(obj => obj.isChecked ? {...obj, isChecked:false }: obj)\r\n        });\r\n          \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n          \r\n\r\n            <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                   \r\n                        <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <div className=\"card-title\">\r\n                                        <div className=\"input-group input-group-sm\">\r\n                                            <span className=\"input-group-append\">\r\n                                                <button type=\"button\" className=\"btn btn-primary btn-flat\" onClick={this.resetClick} data-toggle=\"modal\" data-target=\"#user-model\">Create New User &nbsp;&nbsp;<i className=\"fas fa-plus\"></i></button>\r\n                                            </span>\r\n                                        </div>\r\n\r\n                                </div>\r\n                             \r\n                            </div>\r\n                            \r\n                            <div className=\"card-body\">\r\n                                <ReactDatatable\r\n                                    config={this.config}\r\n                                    records={this.state.records}\r\n                                    columns={this.columns}/>    \r\n                            </div>\r\n                           \r\n                            </div>\r\n                            \r\n                        </div>\r\n                        </div>\r\n                   \r\n                       \r\n                    </div>\r\n            </section>\r\n\r\n\r\n            <div className=\"modal fade\" id=\"user-model\">\r\n                    <div className=\"modal-dialog modal-xl\">\r\n                        <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h4 className=\"modal-title\">User</h4>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">×</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n\r\n          \r\n\r\n                       <div className=\"container-fluid\">\r\n                            <form className=\"form-inline\">\r\n                                <label htmlFor=\"inlineFormEmail\" className=\"m-2 font-weight-normal\">User Name <span className=\"text-danger\">*</span></label>\r\n                                <input type=\"email\" className=\"form-control col-2 form-control-sm\" name=\"username\" id=\"username\" value= {this.state.username} onChange={this.handleFormChange} />\r\n                                <label htmlFor=\"inlineFormPassword\" className=\"m-2 font-weight-normal\">Password <span className=\"text-danger\">*</span></label>\r\n                                <input type=\"password\" className=\"form-control  col-2 form-control-sm\" name=\"userpwd\" id=\"userpwd\" value= {this.state.userpwd} onChange={this.handleFormChange} />\r\n                                <label htmlFor=\"confirmFormPassword\" className=\"m-2 font-weight-normal\">Confirm Password <span className=\"text-danger\">*</span></label>\r\n                                <input type=\"password\" className=\"form-control  col-2 form-control-sm\" name=\"userconfirmpwd\" id=\"userconfirmpwd\" value= {this.state.userconfirmpwd} onChange={this.handleFormChange} />\r\n                                <label htmlFor=\"isActive\" className=\"m-2 font-weight-normal\">Active<span className=\"text-danger\">*</span></label>\r\n                                <input type=\"checkbox\" className=\"form-check-input\" id=\"isActive\"  checked={this.state.active} onChange={this.handleCheckClick}/>\r\n                            </form>\r\n                                <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"card\">\r\n                                   \r\n                                    <div className=\"card-body table-responsive p-0\" style={{height: 300}}>\r\n                                        <table className=\"table table-head-fixed text-nowrap table-bordered\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th style={{width: 10}}>#</th>\r\n                                                <th>Roles</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                this.state.roleList.map( (role, i)=>(\r\n                                                    <tr key={i}>\r\n                                                        <td><div className=\"form-check\"> <input className=\"form-check-input\" type=\"checkbox\" name={role.roleId}  value={role.roleId} checked={role.isChecked} onChange={ (e)=>this.handleChange(e,i)}/></div></td>\r\n                                                        <td>{role.roleName}</td>\r\n                                                    </tr>\r\n                                                ))\r\n                                            }\r\n                                    </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                                </div>\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                        \r\n                        </div>\r\n                        <div className=\"modal-footer justify-content-between\">\r\n                            <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\">Close</button> &nbsp;&nbsp;\r\n                             <span className=\"text-danger\"> {this.state.errormsg}</span>\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.saveClick}>Save</button>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n\r\n            <div className=\"modal fade\" id=\"modal-deleteUser\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h4 className=\"modal-title\">Info</h4>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">×</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <p>Do you Want to Delete?</p>\r\n                    </div>\r\n                    <div className=\"modal-footer justify-content-between\">\r\n                        <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n                        <button type=\"button\" className=\"btn btn-primary\">Delete</button>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n             </div>\r\n                \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      profile: state.user.profile,\r\n      apiurl: state.user.apiurl\r\n    }\r\n  }\r\n\r\n export default connect(mapStateToProps)(ManageUsers);\r\n\r\n\r\n//export default ManageUsers\r\n","E:\\Friends\\Selva\\steedApp\\src\\components\\quality\\CSRegeneration.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\quality\\CSGeneration.js",["272","273","274"],"import React, { Component } from 'react'\r\n\r\nexport class CSGeneration extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <section className=\"content\">\r\n                        <div className=\"container-fluid\">\r\n                   \r\n                        <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"card\">\r\n                            <div className=\"card-body\" style={{height: 500}}>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                         <form className=\"form-inline\">\r\n                                            <label htmlFor=\"exampleSelectRounded0\" className=\"my-1 mr-2\" >CS Document No</label>\r\n                                            <input type=\"text\" class=\"form-control form-control-sm\" id=\"validationDefault05\" placeholder=\"start No\" required />&nbsp;\r\n                                            <input type=\"text\" class=\"form-control form-control-sm\" id=\"validationDefault05\" placeholder=\"end No\" required />&nbsp;&nbsp;&nbsp;\r\n\r\n                                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                            <label htmlFor=\"exampleSelectRounded0\" className=\"my-1 mr-2\" >Date</label>\r\n                                            <input type=\"date\" class=\"form-control form-control-sm\" id=\"validationDefault05\" placeholder=\"date\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                            <label htmlFor=\"exampleSelectRounded0\" className=\"my-1 mr-2\" >Work Order</label>\r\n                                            <select className=\"form-control form-control-sm\" id=\"exampleSelectRounded0\">\r\n                                                <option>Order No 1</option>\r\n                                                <option>Order No 2</option>\r\n                                                <option>Order No 444444444444444</option>\r\n                                            </select>\r\n                                        </form>\r\n                                     </div>\r\n                                </div><br></br>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                         <form className=\"form-inline\">\r\n                                            <label htmlFor=\"exampleSelectRounded0\" className=\"my-1 mr-2\" >Product</label>\r\n                                            <input type=\"text\" class=\"form-control form-control-sm\" id=\"validationDefault05\" placeholder=\"product\" disabled/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                            <label htmlFor=\"exampleSelectRounded0\" className=\"my-1 mr-2\" >Qty</label>\r\n                                            <input type=\"text\" class=\"form-control form-control-sm\" id=\"validationDefault05\" placeholder=\"start \" required />&nbsp;\r\n                                            <input type=\"text\" class=\"form-control form-control-sm\" id=\"validationDefault05\" placeholder=\"end \" required />&nbsp;&nbsp;&nbsp;\r\n                                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                            <button className=\"btn btn-primary\">Generate</button>\r\n                                        </form>\r\n                                     </div>\r\n                                </div><br></br>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6\">\r\n                                         <form className=\"form-inline\">\r\n                                          \r\n                                        </form>\r\n                                     </div>\r\n                                </div>\r\n                                <br></br>\r\n                                <table className=\"table table-bordered table-hover text-nowrap\">\r\n                                <thead>\r\n                                    <tr>\r\n                                    <th>#ID</th>\r\n                                    <th>CS Identification No</th>\r\n                                    <th>Segment</th>\r\n                                    <th>Remarks</th>\r\n                                    <th>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>1</td>\r\n                                        <td><input type=\"text\" class=\"form-control form-control-sm\" id=\"validationDefault05\" placeholder=\"end \" required value=\"S2000008968574\"/></td>\r\n                                        <td><input type=\"text\" class=\"form-control form-control-sm\" id=\"validationDefault05\" placeholder=\"end \" required value=\"CANSTAT\"/></td>\r\n                                        <td><input type=\"text\" class=\"form-control form-control-sm\" id=\"validationDefault05\" placeholder=\"end \" required value=\"\"/></td>\r\n                                        <td className=\"project-actions \">\r\n                                            <a className=\"btn btn-danger btn-sm\" href=\"#\" data-toggle=\"modal\" data-target=\"#modal-deleteUser\"><i className=\"fas fa-trash\"></i>Delete</a>&nbsp;&nbsp;\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>2</td>\r\n                                        <td><input type=\"text\" class=\"form-control form-control-sm\" id=\"validationDefault05\" placeholder=\"end \" required value=\"S2000008968574\"/></td>\r\n                                        <td><input type=\"text\" class=\"form-control form-control-sm\" id=\"validationDefault05\" placeholder=\"end \" required value=\"CANSTAT\"/></td>\r\n                                        <td><input type=\"text\" class=\"form-control form-control-sm\" id=\"validationDefault05\" placeholder=\"end \" required value=\"\"/></td>\r\n                                        <td className=\"project-actions \">\r\n                                            <a className=\"btn btn-danger btn-sm\" href=\"#\" data-toggle=\"modal\" data-target=\"#modal-deleteUser\"><i className=\"fas fa-trash\"></i>Delete</a>&nbsp;&nbsp;\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>3</td>\r\n                                        <td><input type=\"text\" class=\"form-control form-control-sm\" id=\"validationDefault05\" placeholder=\"end \" required value=\"S2000008968574\"/></td>\r\n                                        <td><input type=\"text\" class=\"form-control form-control-sm\" id=\"validationDefault05\" placeholder=\"end \" required value=\"CANSTAT\"/></td>\r\n                                        <td><input type=\"text\" class=\"form-control form-control-sm\" id=\"validationDefault05\" placeholder=\"end \" required value=\"\"/></td>\r\n                                        <td className=\"project-actions \">\r\n                                            <a className=\"btn btn-danger btn-sm\" href=\"#\" data-toggle=\"modal\" data-target=\"#modal-deleteUser\"><i className=\"fas fa-trash\"></i>Delete</a>&nbsp;&nbsp;\r\n                                        </td>\r\n                                    </tr>\r\n                              \r\n                                   \r\n                                </tbody>\r\n                                </table>\r\n                            </div>\r\n                           \r\n                            </div>\r\n                            \r\n                        </div>\r\n                        </div>\r\n                   \r\n                       \r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CSGeneration\r\n","E:\\Friends\\Selva\\steedApp\\src\\components\\production\\Machine.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\ped\\PedProcess.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\ped\\Bom.js",["275"],"import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport $ from \"jquery\";\r\n\r\nexport class Bom extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.columns = [\r\n            {\r\n                key: \"rowSelected\",\r\n                text: \"#\",\r\n                align: \"left\",\r\n                sortable: false,\r\n                width: 10,\r\n                cell: (record, index) => {\r\n                    return (\r\n                        <div className=\"form-check\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" name=\"rowSelected\" id=\"rowSelected\" onClick={ (e)=>this.selectRecord(e,index)} />\r\n                        </div>\r\n                       \r\n                    );\r\n                }\r\n            },\r\n            {\r\n                key: \"productCode\",\r\n                text: \"Code\",\r\n                sortable: true,\r\n                width: 100,\r\n            },\r\n            {\r\n                key: \"productName\",\r\n                text: \"Material Name\",\r\n                sortable: true,\r\n                width: 300,\r\n            },{\r\n                key: \"measurementType\",\r\n                text: \"Measurement Type\",\r\n                sortable: true,\r\n                width: 100,\r\n            },{\r\n                key: \"measurementName\",\r\n                text: \"Measurement Name\",\r\n                sortable: true,\r\n                width: 100,\r\n            },{\r\n                key: \"uomType\",\r\n                text: \"UOM Type\",\r\n                sortable: true,\r\n                width: 100,\r\n            },\r\n            {\r\n                key: \"qty\",\r\n                text: \"Qty\",\r\n                width: 50,\r\n                cell: (record, index) => {\r\n                    return (\r\n                        <>\r\n                            <input type=\"text\" className=\"form-control form-control-sm\" name=\"qty\" id=\"qty\" value={record.qty} onChange={ (e)=>this.editRecord(e,index)} />\r\n                        </>\r\n                       \r\n                    );\r\n                }\r\n            },\r\n            {\r\n                key: \"action\",\r\n                text: \"Action\",\r\n                width: 100,\r\n                cell: (record, index) => {\r\n                    return (\r\n                            <button\r\n                                className=\"btn btn-warning btn-sm\"\r\n                                style={{marginRight: '5px'}}\r\n                                onClick={ (e)=>this.clearRecord(e,index)}>\r\n                                    <i className=\"fas fa-times\" ></i>&nbsp;Clear\r\n                            </button>\r\n                       \r\n                    );\r\n                }\r\n            }\r\n        ];\r\n\r\n        this.state = {\r\n            name:\"\",\r\n            shortName:\"\",\r\n            varientId:0,\r\n            isActive:true,\r\n            showModal:false,\r\n            errormsg:\"\",\r\n            productList:[],\r\n            records:[],\r\n            productId:0,\r\n            isLoaded:false,\r\n            loginUser:this.props.profile\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTableValues();\r\n//        console.log('props profile-->:'+this.props.apiurl)\r\n        $(\"#as-react-datatable-container\").find('select').addClass(\"form-control-sm\");\r\n        $(\"#as-react-datatable-container\").find('input').addClass(\"form-control-sm\");\r\n\r\n     }  \r\n    getTableValues(){\r\n        fetch(this.props.apiurl+\"billOfMaterial/allBillOfMaterials\")\r\n        .then(res => res.json())\r\n        .then( (result) => {\r\n               // console.log(\"result-->\"+JSON.stringify(result))\r\n                if(result.valid){\r\n                    this.setState({\r\n                        productList: result.productList\r\n                    },()=>{ $(\"#as-react-datatable td\").css({\"padding\":'0.50rem'});});\r\n                }else{}\r\n            },(error) => {\r\n            }\r\n        )\r\n    }\r\n    handleProductChange = event => {\r\n        this.setState({[event.target.name]: event.target.value},()=>{\r\n\r\n            if(this.state.productId === 0 || this.state.productId ===\"0\"){\r\n                this.setState({\r\n                    records: []\r\n                });\r\n            }else{\r\n                fetch(this.props.apiurl+\"billOfMaterial/productBoms?productId=\"+this.state.productId)\r\n                .then(res => res.json())\r\n                .then( (result) => {\r\n                       // console.log(\"result-->\"+JSON.stringify(result))\r\n                        if(result.valid){\r\n                            this.setState({\r\n                                records: result.bomProductList,\r\n                                errormsg: \"\"\r\n                            });\r\n                        }else{}\r\n                    },(error) => {\r\n                    }\r\n                )\r\n            }\r\n            \r\n\r\n        });\r\n    };\r\n    \r\n    editRecord = (e,index) => {\r\n        const { records } = this.state;\r\n        records[index].qty = e.target.value;\r\n      this.setState({ records: records },()=>{ \r\n        });\r\n \r\n     }\r\n\r\n     clearRecord = (e,index) => {\r\n         \r\n        const { records } = this.state;\r\n      //  console.log(\"-->\"+JSON.stringify(records[index]))\r\n        records[index].qty = '';\r\n      //  this.state.qty=''\r\n        this.setState({ records: records },()=>{ \r\n          //  console.log(\"AFTER-->\"+JSON.stringify(records[index]))\r\n        });\r\n \r\n     }\r\n\r\n     \r\n     selectRecord = (e,index) => {\r\n           const { records } = this.state;\r\n         \r\n           \r\n         //  console.log(\"check-->\"+e.target.checked)\r\n           records[index].rowSelected = !e.target.value;\r\n                this.setState({ records: records },()=>{ \r\n             });\r\n    \r\n    }\r\n\r\n\r\n    saveClick= event =>{\r\n\r\n        const { records } = this.state;\r\n        let result = records.filter(el => el.qty === '' ||el.qty === '0');\r\n  //      console.log('varlen--'+result.length)\r\n        \r\n        if(records.length === 0){\r\n            this.setState({\r\n                errormsg: \"Select Product and Enter Any one Values\"\r\n            });\r\n        } else  if(records.length === result.length){\r\n            this.setState({\r\n                errormsg: \"Enter Any one Qty Values\"\r\n            });\r\n        } else{\r\n            this.setState({\r\n                errormsg: \"\"\r\n            });\r\n\r\n            var obj = {\r\n                \"bomProductList\":this.state.records,\r\n                \"updatedBy\":this.state.loginUser.userId,\"createdBy\":this.state.loginUser.userId};\r\n            }\r\n\r\n            \r\n               // POST request using fetch with error handling\r\n               const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({  \"bomProductList\":this.state.records,\"updatedBy\":this.state.loginUser.userId,\"createdBy\":this.state.loginUser.userId,\"productId\":this.state.productId})\r\n            };\r\n            fetch(this.props.apiurl+\"billOfMaterial/saveBillOfMaterial\", requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n               //     console.log(\"--data--\"+JSON.stringify(data))\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    }\r\n\r\n                    if(data.valid){\r\n                         //  console.log(\"c role->\"+obj)\r\n                         this.setState({\r\n                            errormsg: data.responseMsg,\r\n                            records: result.bomProductList,\r\n                        },()=>{\r\n                            //this.resetClick();\r\n                        });\r\n                       \r\n                    }else{\r\n                       this.setState({ errormsg: data.responseMsg});\r\n                      // this.resetClick();\r\n                    } \r\n                })\r\n                .catch(error => {\r\n                    this.setState({ errormsg: error.toString() });\r\n                  //  console.error('There was an error!', error);\r\n                });\r\n       \r\n    }\r\n\r\n    resetClick= () => {\r\n        this.setState({ \r\n            name:\"\",\r\n            shortName:\"\",\r\n            varientId:0,\r\n            isActive:true,\r\n            showModal:false,\r\n            errormsg:\"\",\r\n            productList:[],\r\n            records:[],\r\n            productId:0,\r\n            isLoaded:false,\r\n        });\r\n   }\r\n\r\n\r\n    refreshClick = () => {\r\n        this.resetClick();\r\n        this.componentDidMount();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                   \r\n                        <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"card card-success card-outline\">\r\n                                <div className=\"card-header\">\r\n                                    <form className=\"form-inline\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"inlineFormEmail \" className=\"font-weight-normal\">Product </label>&nbsp;&nbsp;\r\n                                            <select className=\"custom-select\" id=\"productId\" name=\"productId\" value={this.state.productId} onChange={this.handleProductChange}>\r\n                                            <option value=\"0\">Select Product</option>\r\n                                            {this.state.productList.map(o => (\r\n                                                <option value={o.productId}>{o.orderCode+\"_\"+o.productName }</option>\r\n                                            ))}\r\n                                        </select>\r\n\r\n                                      \r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            \r\n                                <div className=\"card-body\">\r\n                                    <ReactDatatable\r\n                                        config={this.config}\r\n                                        records={this.state.records}\r\n                                        columns={this.columns}/>\r\n                                </div>\r\n                                <div className=\"card-footer justify-content-between \">\r\n                                    <button type=\"button\" className=\"btn btn-default float-left\" >Clear</button>&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                    <button type=\"button\" className=\"btn btn-success  \" onClick={this.refreshClick}><i className=\"fas fa-sync\"></i>&nbsp;Refresh</button>\r\n                                    <span className=\"text-danger float-center\">{this.state.errormsg}</span>\r\n                                    <button type=\"button\" className=\"btn btn-primary float-right\" onClick={this.saveClick}>Save</button>  &nbsp;&nbsp;&nbsp;\r\n                                         \r\n                                            \r\n                                </div>\r\n\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        </div>\r\n                   \r\n                       \r\n                    </div>\r\n                    </section> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      profile: state.user.profile,\r\n      apiurl: state.user.apiurl\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Bom);\r\n\r\n//export default Bom\r\n\r\n","E:\\Friends\\Selva\\steedApp\\src\\components\\ped\\PedProduct.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\ped\\PedProcessFlow.js",["276"],"import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport $ from \"jquery\";\r\n\r\n\r\nexport class PedProcessFlow extends Component {\r\n    constructor(props) {\r\n        \r\n        super(props)\r\n          this.columns = [\r\n            {\r\n                key: \"operationNo\",\r\n                text: \"Operation No\",\r\n                sortable: true\r\n            },{\r\n                key: \"productName\",\r\n                text: \"Product Name\",\r\n                sortable: true\r\n            },{\r\n                key: \"processName\",\r\n                text: \"Process Name\",\r\n                sortable: true\r\n            } ,{\r\n                key: \"cycleTime\",\r\n                text: \"Cycle Time\",\r\n                sortable: true\r\n            } ,\r\n            {\r\n                key: \"action\",\r\n                text: \"Action\",\r\n                cell: (record, index) => {\r\n                    return (\r\n                            <button\r\n                                className=\"btn btn-info btn-sm\"\r\n                                onClick={this.editRecord.bind(this, record, index)}\r\n                                style={{marginRight: '5px'}}>\r\n                                    <i className=\"fas fa-pencil-alt\" ></i>&nbsp;Edit\r\n                            </button>\r\n                       \r\n                    );\r\n                }\r\n            }\r\n        ];\r\n\r\n        this.config = {\r\n            key_column: 'processFlowId',\r\n            page_size: 10,\r\n            length_menu: [10, 20, 50],\r\n            show_filter: true,\r\n            show_pagination: true,\r\n            pagination: 'advance',\r\n            filename: \"Process Flow\",\r\n            button: {\r\n                excel: true,\r\n                print: true,\r\n                csv: true\r\n            }\r\n        }\r\n        this.state = {\r\n            processFlowId:0,\r\n            productId:0,\r\n            processId:0,\r\n            operationNo:\"\",\r\n            cycleTime:\"\",\r\n\r\n            processName:\"\",\r\n            productName:\"\",\r\n            isActive:true,\r\n\r\n            showModal:false,\r\n            errormsg:\"\",\r\n            records:[],\r\n            productList:[],\r\n            processList:[],\r\n            isLoaded:false,\r\n            loginUser:this.props.profile\r\n        }\r\n       \r\n    }\r\n\r\n      \r\n    componentDidMount() {\r\n        this.getTableValues();\r\n//        console.log('props profile-->:'+this.props.apiurl)\r\n    $(\"#as-react-datatable-container\").find('select').addClass(\"form-control-sm\");\r\n    $(\"#as-react-datatable-container\").find('input').addClass(\"form-control-sm\");\r\n\r\n     }  \r\n    getTableValues(){\r\n        fetch(this.props.apiurl+\"processflow/allProcessFlows\")\r\n        .then(res => res.json())\r\n        .then( (result) => {\r\n              //  console.log(\"result-->\"+JSON.stringify(result))\r\n                if(result.valid){\r\n                    this.setState({\r\n                        records: result.processFlowList,\r\n                        productList:result.productList,\r\n                        processList:result.processList,\r\n                    },()=>{ $(\"#as-react-datatable td\").css({\"padding\":'0.50rem'});});\r\n                }else{}\r\n            },(error) => {\r\n            }\r\n        )\r\n    }\r\n\r\n    handleFormChange = event => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    handleCheckClick = () => {\r\n        this.setState({ isActive: !this.state.isActive });\r\n    }\r\n\r\n    saveClick= event =>{\r\n        //  console.log(\"state-->\"+JSON.stringify(this.state))\r\n          if(this.state.productId === \"\" || this.state.productId === \"0\"){\r\n              this.setState({\r\n                  errormsg: \"Select Product Name\"\r\n              });\r\n          }else if(this.state.processId === \"\" || this.state.processId === \"0\"){\r\n            this.setState({\r\n                errormsg: \"Select Process\"\r\n            });\r\n        }else if(this.state.operationNo === \"\" ){\r\n              this.setState({\r\n                  errormsg: \"Enter Operation No\"\r\n              }); \r\n          }else if(this.state.cycleTime === \"\" ){\r\n            this.setState({\r\n                errormsg: \"Enter Cycle Time\"\r\n            });\r\n        }else{\r\n              var tempstatus=\"\";\r\n              if(this.state.isActive){\r\n                  tempstatus=\"Active\"\r\n              }else{\r\n                  tempstatus=\"InActive\"\r\n              }\r\n         \r\n          \r\n  \r\n              const obj = {\r\n                  'productId':this.state.productId,'processId':this.state.processId,'operationNo':this.state.operationNo,'cycleTime':this.state.cycleTime,\r\n                  \"updatedBy\":this.state.loginUser.userId,\"createdBy\":this.state.loginUser.userId};\r\n  \r\n               // POST request using fetch with error handling\r\n                  const requestOptions = {\r\n                      method: 'POST',\r\n                      headers: { 'Content-Type': 'application/json' },\r\n                      body: JSON.stringify({ \"processFlowObj\": obj })\r\n                  };\r\n                  fetch(this.props.apiurl+\"processflow/saveProcessFlow\", requestOptions)\r\n                      .then(async response => {\r\n                          const data = await response.json();\r\n                     //     console.log(\"--data--\"+JSON.stringify(data))\r\n                          // check for error response\r\n                          if (!response.ok) {\r\n                              // get error message from body or default to response status\r\n                              const error = (data && data.message) || response.status;\r\n                              return Promise.reject(error);\r\n                          }\r\n  \r\n                          if(data.valid){\r\n                               //  console.log(\"c role->\"+obj)\r\n                               this.setState({\r\n                                  errormsg: \"Process Flow Details Saved Successfully\",\r\n                                  records: data.processFlowList,\r\n                              },()=>{\r\n                                  this.resetClick();\r\n                              });\r\n                             \r\n                          }else{\r\n                             this.setState({ errormsg: data.responseMsg});\r\n                             this.resetClick();\r\n                          } \r\n                      })\r\n                      .catch(error => {\r\n                          this.setState({ errormsg: error.toString() });\r\n                        //  console.error('There was an error!', error);\r\n                      });\r\n                      \r\n            \r\n          }\r\n      }\r\n\r\n      editRecord = (record, index) => {\r\n        // console.log(\"Edit record\", index, record);\r\n        // console.log(\"-->\"+JSON.stringify(record))\r\n        \r\n         this.setState({\r\n            productId:record.productId,\r\n            processId:record.processId,\r\n            operationNo:record.operationNo,\r\n            cycleTime:record.cycleTime\r\n         });\r\n     }\r\n\r\n      resetClick= () => {\r\n        this.setState({ \r\n            processFlowId:0,\r\n            productId:0,\r\n            processId:0,\r\n            operationNo:\"\",\r\n            cycleTime:\"\",\r\n\r\n            processName:\"\",\r\n            productName:\"\",\r\n            isActive:true,\r\n\r\n           errormsg:\"\",\r\n        });\r\n   }\r\n\r\n   refreshClick = () => {\r\n    this.resetClick();\r\n    this.componentDidMount();\r\n}\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                  <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                   \r\n                        <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <div className=\"card-title\">\r\n                                         <div className=\"form-inline\">\r\n                                             <label htmlFor=\"inlineFormEmail\" className=\"m-2 font-weight-normal\">Product </label>\r\n                                            <select className=\"form-control form-control-sm\" id=\"productId\" name=\"productId\" value={this.state.productId} onChange={this.handleFormChange}>\r\n                                                <option value=\"0\">Select</option>\r\n                                                {this.state.productList.map(o => (\r\n                                                    <option value={o.productId}>{o.productName}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                            &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                       \r\n                                            <label htmlFor=\"inlineFormEmail\" className=\"m-2 font-weight-normal\">Operation No <span className=\"text-danger\">*</span></label>\r\n                                            <input type=\"email\" className=\"form-control m-2 form-control-sm\" id=\"operationNo\" name=\"operationNo\" value= {this.state.operationNo} onChange={this.handleFormChange} placeholder=\"Operation No\"  />\r\n                                            <label htmlFor=\"inlineFormEmail\" className=\"m-2 font-weight-normal\">Process Name </label>\r\n                                            <select className=\"form-control form-control-sm\" id=\"processId\" name=\"processId\" value={this.state.processId} onChange={this.handleFormChange}>\r\n                                                <option value=\"0\">Select</option>\r\n                                                {this.state.processList.map(o => (\r\n                                                    <option value={o.processId}>{o.processName}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                            <label htmlFor=\"inlineFormEmail\" className=\"m-2 font-weight-normal\">Cycle Time <span className=\"text-danger\">*</span></label>\r\n                                            <input type=\"email\" className=\"form-control m-2 form-control-sm\" id=\"cycleTime\" name=\"cycleTime\" value= {this.state.cycleTime} onChange={this.handleFormChange} placeholder=\"Cycle Time\"  />\r\n                                            <button type=\"button\" className=\"btn btn-primary  btn-sm\" onClick={this.saveClick}>Save</button> &nbsp;&nbsp;&nbsp;\r\n                                            <button type=\"button\" className=\"btn btn-warning  btn-sm\" onClick={this.resetClick}>Clear</button> &nbsp;&nbsp;&nbsp;\r\n                                            <button type=\"button\" className=\"btn btn-success btn-sm\" onClick={this.refreshClick}><i className=\"fas fa-sync\"></i>&nbsp;Refresh</button>\r\n                                            <span className=\"text-danger\">{this.state.errormsg}</span>\r\n                                        </div>\r\n\r\n                                </div>\r\n                                <div className=\"card-tools\">\r\n                                   \r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"card-body\" style={{height: 500}}>\r\n                                \r\n\r\n                                <ReactDatatable\r\n                                    config={this.config}\r\n                                    records={this.state.records}\r\n                                    columns={this.columns}/>\r\n\r\n                            </div>\r\n                            <div className=\"card-footer clearfix\">\r\n                                \r\n                            </div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        </div>\r\n                   \r\n                       \r\n                    </div>\r\n            </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      profile: state.user.profile,\r\n      apiurl: state.user.apiurl\r\n    }\r\n  }\r\nexport default connect(mapStateToProps)(PedProcessFlow);\r\n\r\n\r\n//export default PedProcessFlow\r\n","E:\\Friends\\Selva\\steedApp\\src\\components\\ped\\PedProuductVarient.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\production\\MachineProcessMap.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\commercial\\DealerOrder.js",["277","278","279","280","281","282"],"import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport Select from 'react-select';\r\nimport $ from 'jquery';\r\n\r\nexport class DealerOrder extends Component {\r\n\r\n    constructor(props) {\r\n        \r\n        super(props)\r\n        \r\n     \r\n\r\n        this.columns = [\r\n            {\r\n                key: \"orderNo\",\r\n                text: \"Order No\",\r\n                sortable: true\r\n            },{\r\n                key: \"orderDate\",\r\n                text: \"Date\",\r\n                sortable: true\r\n            },{\r\n                key: \"reference\",\r\n                text: \"Reference\",\r\n                sortable: true\r\n            } ,{\r\n                key: \"orderFor\",\r\n                text: \"Order For\",\r\n                sortable: true\r\n            },{\r\n                key: \"dealerName\",\r\n                text: \"Dealer Name\",\r\n                sortable: true\r\n            },{\r\n                key: \"dealerContactPerson\",\r\n                text: \"Contact Person\",\r\n                sortable: true\r\n            },{\r\n                key: \"total\",\r\n                text: \"Amount\",\r\n                sortable: true\r\n            }  ,\r\n            \r\n            {\r\n                key: \"action\",\r\n                text: \"Action\",\r\n                cell: (record, index) => {\r\n                    return (\r\n                            <button\r\n                                className=\"btn btn-info btn-sm\"\r\n                                data-toggle=\"modal\" data-target=\"#new_order\"\r\n                                onClick={this.editRecord.bind(this, record, index)}\r\n                                style={{marginRight: '5px'}}>\r\n                                    <i className=\"fas fa-pencil-alt\" ></i>&nbsp;Edit\r\n                            </button>\r\n                       \r\n                    );\r\n                }\r\n            }\r\n        ];\r\n\r\n        this.config = {\r\n            key_column: 'dealerId',\r\n            page_size: 10,\r\n            length_menu: [10, 20, 50],\r\n            show_filter: true,\r\n            show_pagination: true,\r\n            pagination: 'advance',\r\n            filename: \"Dealer\",\r\n            button: {\r\n                excel: true,\r\n                print: true,\r\n                csv: true\r\n            }\r\n        }\r\n        this.state = {\r\n            orderDate:\"\",\r\n            orderNo:\"\",\r\n            dealerId:\"\",\r\n            reference:\"\",\r\n            dealerContactPerson:\"\",\r\n            orderFor:\"Dealer\",\r\n            dealerOrderId:0,\r\n\r\n            subtotal:\"\",\r\n\t\t\ttaxTotal:\"\",\r\n\t\t\ttotal:\"\",\r\n\r\n            showModal:false,\r\n            errormsg:\"\",\r\n            records:[],\r\n            dealerList:[],\r\n            productList:[],\r\n            orderDetailsList:[],\r\n            productsearch:[],\r\n            isLoaded:false,\r\n            loginUser:this.props.profile\r\n        }\r\n       \r\n    }\r\n\r\n    resetClick = ()=>{\r\n        this.setState({\r\n            orderDate:\"\",\r\n            orderNo:\"\",\r\n            dealerId:\"\",\r\n            reference:\"\",\r\n            dealerContactPerson:\"\",\r\n            orderFor:\"Dealer\",\r\n            dealerOrderId:0,\r\n\r\n            subtotal:\"\",\r\n\t\t\ttaxTotal:\"\",\r\n\t\t\ttotal:\"\",\r\n\r\n            errormsg:\"\",\r\n            orderDetailsList:[],\r\n        });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTableValues();\r\n//        console.log('props profile-->:'+this.props.apiurl)\r\n        $(\"#as-react-datatable-container\").find('select').addClass(\"form-control-sm\");\r\n        $(\"#as-react-datatable-container\").find('input').addClass(\"form-control-sm\");\r\n\r\n     }  \r\n    getTableValues(){\r\n        fetch(this.props.apiurl+\"dealerOrder/allDealerOrders\")\r\n        .then(res => res.json())\r\n        .then( (result) => {\r\n              //  console.log(\"result-->\"+JSON.stringify(result))\r\n                if(result.valid){\r\n                    this.setState({\r\n                        records: result.dealerOrderList,\r\n                        dealerList: result.dealerList,\r\n                        productList:result.productList\r\n                    },()=>{\r\n                            for (const [index, value] of this.state.productList.entries()) {\r\n                                this.state.productsearch.push({\r\n                                    label: value.orderCode,\r\n                                    value: value.productId\r\n                                });\r\n                            }\r\n                            $(\"#as-react-datatable td\").css({\"padding\":'0.50rem'});\r\n                    });\r\n\r\n                  //  console.log(\"nextDealerCode-->\"+result.sObj.currentNext)\r\n                }else{}\r\n            },(error) => {\r\n            }\r\n        )\r\n    }\r\n\r\n    handleFormChange = event => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n    handleFormChange1 = event => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n        if(event.target.value === 0 || event.target.value === \"0\"){\r\n            this.setState({dealerContactPerson: \"\"});\r\n        }else{\r\n         var contactPerson=this.state.dealerList.filter( (d)=> d.dealerId == event.target.value)\r\n       // console.log(\"-->\"+JSON.stringify(contactPerson[0].dealerContactPerson))\r\n        this.setState({dealerContactPerson: contactPerson[0].dealerContactPerson});\r\n        }\r\n       \r\n\r\n    };\r\n\r\n\r\n    newOrderClick = () => {\r\n      \r\n        var emptyobj={\r\n            dealerOrderId:0,\r\n            productId:0,\r\n            orderCode:\"\",\r\n            productName:\"\",\r\n            size:\"\",\r\n            colors:\"\",\r\n            qty:0,\r\n            price:0,\r\n            amount:0,\r\n            gst:\"GST_0\",\r\n            gstAmt:0\r\n        }\r\n\r\n        let orderDetailsListtemp = this.state.orderDetailsList\r\n        orderDetailsListtemp.push(emptyobj)\r\n        \r\n        this.setState({ orderDetailsList:orderDetailsListtemp },()=>{\r\n            \r\n        })\r\n       \r\n    }\r\n    \r\n    handleProductChange = (ind,event) => {      \r\n       // console.log(\"target value-->\"+event.target.value) \r\n\r\n        const { orderDetailsList } = this.state;\r\n        //console.log(\"current-->\"+JSON.stringify(orderDetailsList[ind]))\r\n        orderDetailsList[ind].productId = event.target.value\r\n        \r\n        var product=this.state.productList.filter( (d)=> d.productId == event.target.value)\r\n       // console.log(\"product-->\"+JSON.stringify(product[0].productCode))\r\n\r\n         orderDetailsList[ind].productName = product[0].productCode\r\n         orderDetailsList[ind].size = product[0].size\r\n         orderDetailsList[ind].colors = product[0].colors\r\n         orderDetailsList[ind].qty = 0\r\n        orderDetailsList[ind].price = 0\r\n        orderDetailsList[ind].amount = 0\r\n        orderDetailsList[ind].gstAmt = 0\r\n         \r\n         \r\n        this.setState({ orderDetailsList:orderDetailsList },()=>{\r\n         });\r\n        \r\n    }\r\n\r\n    handleProductQtyChange= (ind,event) => {      \r\n         const { orderDetailsList } = this.state;\r\n         orderDetailsList[ind].qty = event.target.value\r\n         this.setState({ orderDetailsList:orderDetailsList },()=>{\r\n            this.priceCalculation(orderDetailsList[ind],ind);\r\n          });\r\n     }\r\n\r\n    handleProductPriceChange= (ind,event) => {      \r\n        const { orderDetailsList } = this.state;\r\n        orderDetailsList[ind].price = event.target.value\r\n        this.setState({ orderDetailsList:orderDetailsList },()=>{\r\n            this.priceCalculation(orderDetailsList[ind],ind);\r\n         });\r\n    }\r\n\r\n    handleProductGSTChange= (ind,event) => {      \r\n        const { orderDetailsList } = this.state;\r\n        orderDetailsList[ind].gst = event.target.value\r\n        this.setState({ orderDetailsList:orderDetailsList },()=>{\r\n            this.priceCalculation(orderDetailsList[ind],ind);\r\n         });\r\n    }\r\n\r\n    priceCalculation(currentRow,ind){\r\n\r\n        var qty=currentRow.qty;\r\n        var price=currentRow.price;\r\n        var gst=currentRow.gst;\r\n      //  console.log(\"gst-->\"+gst)\r\n        var temp=gst.split(\"_\");\r\n        //console.log('gst %'+temp[1])\r\n\r\n        if(qty !== undefined && price !== undefined){\r\n            var amt=qty*price;\r\n            const { orderDetailsList } = this.state;\r\n            \r\n\r\n            var gstAmt = amt * temp[1] /100;\r\n            orderDetailsList[ind].gstAmt = gstAmt\r\n            orderDetailsList[ind].amount = amt +gstAmt\r\n\r\n\r\n          //  console.log('amt--'+amt)\r\n            this.setState({ orderDetailsList:orderDetailsList },()=>{\r\n\r\n                var subtotal = this.state.orderDetailsList.reduce((total, currentValue) => total = parseFloat(total) + parseFloat(currentValue.amount),0);\r\n                var taxamt = this.state.orderDetailsList.reduce((total, currentValue) => total = parseFloat(total) + parseFloat(currentValue.gstAmt),0);\r\n               // console.log(\"subtotal-->\"+subtotal)\r\n                //console.log(\"taxamt-->\"+taxamt)\r\n                this.setState({ subtotal:subtotal,taxTotal:taxamt,total:taxamt+subtotal });\r\n            });\r\n        }\r\n     \r\n\r\n\r\n    }\r\n    \r\n    handleChange = (ind,event) => {\r\n        const { orderDetailsList } = this.state;\r\n\r\n       var isDuplicate= orderDetailsList.some(function(e) {return e.orderCode === event.value});\r\n//        console.log(\"isDuplicate-->\"+isDuplicate)\r\n        if(isDuplicate){\r\n             orderDetailsList[ind].orderCode = ''\r\n             orderDetailsList[ind].productId = ''\r\n             orderDetailsList[ind].productName = ''\r\n             orderDetailsList[ind].size = ''\r\n             orderDetailsList[ind].colors = ''\r\n             orderDetailsList[ind].qty = 0\r\n             orderDetailsList[ind].price = 0\r\n             orderDetailsList[ind].amount = 0\r\n             orderDetailsList[ind].gstAmt = 0\r\n\r\n            this.setState({orderDetailsList:orderDetailsList, errormsg: event.label+\" Order code Already Added \" },()=>{});\r\n        }else{\r\n            \r\n            orderDetailsList[ind].orderCode = event.value\r\n            var product=this.state.productList.filter( (d)=> d.productId == event.value)\r\n         //   console.log(\"product-->\"+JSON.stringify(product[0]))\r\n          //  console.log(\"product-->\"+JSON.stringify(event.value))\r\n             orderDetailsList[ind].productId = product[0].productId\r\n             orderDetailsList[ind].productName = product[0].productCode\r\n             orderDetailsList[ind].size = product[0].size\r\n             orderDetailsList[ind].colors = product[0].colors\r\n             orderDetailsList[ind].qty = 0\r\n             orderDetailsList[ind].price = 0\r\n             orderDetailsList[ind].amount = 0\r\n             orderDetailsList[ind].gstAmt = 0\r\n             \r\n            this.setState({ orderDetailsList:orderDetailsList,errormsg: \"\" },()=>{\r\n                var subtotal = this.state.orderDetailsList.reduce((total, currentValue) => total = parseFloat(total) + parseFloat(currentValue.amount),0);\r\n                var taxamt = this.state.orderDetailsList.reduce((total, currentValue) => total = parseFloat(total) + parseFloat(currentValue.gstAmt),0);\r\n               // console.log(\"subtotal-->\"+subtotal)\r\n                //console.log(\"taxamt-->\"+taxamt)\r\n                this.setState({ subtotal:subtotal,taxTotal:taxamt,total:taxamt+subtotal });\r\n            });\r\n        }\r\n    \r\n    };\r\n\r\n    removeProductRow = (ind) => {\r\n        const { orderDetailsList } = this.state;\r\n        orderDetailsList.splice(ind,1);\r\n          \r\n         this.setState({ orderDetailsList:orderDetailsList,errormsg: \"\" },()=>{\r\n            var subtotal = this.state.orderDetailsList.reduce((total, currentValue) => total = parseFloat(total) + parseFloat(currentValue.amount),0);\r\n            var taxamt = this.state.orderDetailsList.reduce((total, currentValue) => total = parseFloat(total) + parseFloat(currentValue.gstAmt),0);\r\n           // console.log(\"subtotal-->\"+subtotal)\r\n            //console.log(\"taxamt-->\"+taxamt)\r\n            this.setState({ subtotal:subtotal,taxTotal:taxamt,total:taxamt+subtotal });\r\n         });\r\n    };\r\n\r\n\r\n    saveClick= event =>{\r\n        \r\n        if(this.state.orderDate === \"\"){\r\n            this.setState({\r\n                errormsg: \"Enter Date\"\r\n            });\r\n        }else if(this.state.dealerId === \"\"){\r\n            this.setState({\r\n                errormsg: \"Select Dealer\"\r\n            });\r\n        }else if(this.state.orderDetailsList.length === 0){\r\n            this.setState({\r\n                errormsg: \"Enter Products\"\r\n            });\r\n        }else{\r\n           \r\n        \r\n\r\n            var headerobj={\r\n                \"dealerOrderId\":this.state.dealerOrderId,\r\n                'orderNo':this.state.orderNo,'orderDate':this.state.orderDate,\r\n                'reference':this.state.reference, 'orderFor':this.state.orderFor,'dealerId':this.state.dealerId, \r\n                'subtotal':this.state.subtotal, 'taxTotal':this.state.taxTotal, 'total':this.state.total, \r\n            }\r\n            const obj = {\r\n                \"dealerOrderObj\":headerobj,\r\n                 \"dealerOrderProductsList\":this.state.orderDetailsList,\r\n                \"updatedBy\":this.state.loginUser.userId,\"createdBy\":this.state.loginUser.userId};\r\n\r\n             // POST request using fetch with error handling\r\n                const requestOptions = {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify( obj)\r\n                };\r\n              \r\n              //  console.log(\"save obj-->\"+JSON.stringify( obj))\r\n                \r\n                fetch(this.props.apiurl+\"dealerOrder/saveDealerOrder\", requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n               //     console.log(\"--data--\"+JSON.stringify(data))\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    }\r\n\r\n                    if(data.valid){\r\n                        this.setState({ errormsg: \"Successfully Added the New Order\"});\r\n                    }else{\r\n                       this.setState({ errormsg: data.responseMsg});\r\n                      // this.resetClick();\r\n                    } \r\n                })\r\n                .catch(error => {\r\n                    this.setState({ errormsg: error.toString() });\r\n                  //  console.error('There was an error!', error);\r\n                });\r\n     \r\n                \r\n          \r\n        }\r\n     }\r\n\r\n\r\n     editRecord = (record, index) => {\r\n\r\n        this.setState({\r\n            orderDate:record.orderDate,\r\n            orderNo:record.orderNo,\r\n            dealerId:record.dealerId,\r\n            reference:record.reference,\r\n            dealerContactPerson:record.dealerContactPerson,\r\n            orderFor:record.orderFor,\r\n            dealerOrderId:record.dealerOrderId,\r\n\r\n            subtotal:record.subtotal,\r\n            taxTotal:record.taxTotal,\r\n            total:record.total,\r\n        });\r\n\r\n        fetch(this.props.apiurl+\"dealerOrder/getProductDetails?id=\"+record.dealerOrderId)\r\n        .then(res => res.json())\r\n        .then( (result) => {\r\n              //  console.log(\"result-->\"+JSON.stringify(result))\r\n                if(result.valid){\r\n                    this.setState({\r\n                        orderDetailsList: result.dealerOrderProductsList,\r\n                       // dealerList: result.dealerList,\r\n                      //  productList:result.productList\r\n                    },()=>{\r\n                        \r\n                      \r\n                        const { orderDetailsList } = this.state;\r\n\r\n\r\n                        orderDetailsList.map((ord,i)=>{\r\n                            orderDetailsList[i].orderCode = Number(ord.productId)\r\n                            var product=this.state.productList.filter( (d)=> d.productId == ord.productId)\r\n                            orderDetailsList[i].productName = product[0].productCode\r\n                            orderDetailsList[i].size = product[0].size\r\n                            orderDetailsList[i].colors = product[0].colors\r\n                        })\r\n                        this.setState({ orderDetailsList:orderDetailsList,errormsg: \"\" },()=>{\r\n                            \r\n                          //  console.log(\"orderDetailsList-->\"+JSON.stringify(this.state.orderDetailsList))\r\n                          //  console.log(\"productList-->\"+JSON.stringify(this.state.productsearch))\r\n                        });\r\n\r\n\r\n                    });\r\n\r\n                  //  console.log(\"nextDealerCode-->\"+result.sObj.currentNext)\r\n                }else{}\r\n            },(error) => {\r\n            }\r\n        )\r\n\r\n\r\n     }\r\n\r\n    render() {\r\n\r\n        //const productsearch=[];\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                 <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <div className=\"card-title\">\r\n                                            <div className=\"input-group input-group-sm\">\r\n                                                <span className=\"input-group-append\">\r\n                                                <button type=\"button\" className=\"btn btn-primary btn-flat\" onClick={this.resetClick} data-toggle=\"modal\" data-target=\"#new_order\">Create New Order &nbsp;&nbsp;<i className=\"fas fa-plus\"></i></button>&nbsp;&nbsp;&nbsp;\r\n                                                <button type=\"button\" className=\"btn btn-success\" onClick={this.refreshClick}><i className=\"fas fa-sync\"></i>&nbsp;Refresh</button>\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                </div>\r\n                            \r\n                            <div className=\"card-body\" style={{height: 500}}>\r\n                                 <ReactDatatable\r\n                                    config={this.config}\r\n                                    records={this.state.records}\r\n                                    columns={this.columns}/>\r\n                            </div>\r\n                            \r\n                            </div>\r\n                            \r\n                        </div>\r\n                        </div>\r\n                   \r\n                       \r\n                    </div>\r\n                </section>  \r\n\r\n                <div className=\"modal fade\" id=\"new_order\">\r\n                    <div className=\"modal-dialog mw-100 w-80\">\r\n                        <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h4 className=\"modal-title font-weight-normal\">New Order</h4>\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <div className=\"ml-5\">\r\n                                 <button type=\"button\" className=\"btn btn-primary\" onClick={this.saveClick}>Save</button>\r\n                            </div>\r\n                            \r\n                            \r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">×</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"form-inline\">\r\n                                        <label htmlFor=\"name\" className=\"m-2 col-sm-2 font-weight-normal\">Date<span className=\"text-danger\">*</span></label>\r\n                                        <input type=\"date\" className=\"form-control form-control-sm m-2 col-sm-3\" id=\"orderDate\" name=\"orderDate\" value= {this.state.orderDate}   onChange={this.handleFormChange} />\r\n                                        <label htmlFor=\"name\" className=\"m-2 col-sm-2 font-weight-normal\">Order No<span className=\"text-danger\">*</span></label>\r\n                                        <input type=\"text\" className=\"form-control form-control-sm m-2 col-sm-3\" id=\"orderNo\" name=\"orderNo\" value= {this.state.orderNo} onChange={this.handleFormChange} placeholder=\"Order No\" readOnly />\r\n                                        <label htmlFor=\"name\" className=\"m-2 col-sm-2 font-weight-normal\" >Reference</label>\r\n                                        <input type=\"text\" className=\"form-control form-control-sm m-2 col-sm-3\" id=\"reference\" name=\"reference\" value= {this.state.reference} onChange={this.handleFormChange} placeholder=\"Order Reference\" />\r\n                                        <label htmlFor=\"name\" className=\"m-2 col-sm-2 font-weight-normal\" >Order For</label>\r\n                                        <select className=\"form-control m-2 col-sm-3\" id=\"orderFor\" name=\"orderFor\" value={this.state.orderFor} onChange={this.handleFormChange} >\r\n                                            <option value=\"Dealer\">Dealer</option>\r\n                                            <option value=\"Customer\">Customer</option>\r\n                                        </select>\r\n                                        <label htmlFor=\"name\" className=\"m-2 col-sm-2 font-weight-normal\" >Dealer</label>\r\n                                        <select className=\"form-control m-2 col-sm-3\" id=\"dealerId\" name=\"dealerId\" value={this.state.dealerId} onChange={this.handleFormChange1} >\r\n                                                <option value=\"0\">Select Dealer</option>\r\n                                                {this.state.dealerList.map(o => (\r\n                                                    <option value={o.dealerId}>{o.dealerName}</option>\r\n                                                ))}\r\n\r\n                                        </select>\r\n                                        <label htmlFor=\"name\" className=\"m-2 col-sm-2 font-weight-normal\" >Contact Person</label>\r\n                                        <input type=\"text\" className=\"form-control form-control-sm m-2 col-sm-3\" id=\"dealerContactPerson\" name=\"dealerContactPerson\" value= {this.state.dealerContactPerson} onChange={this.handleFormChange} placeholder=\"Contact Person\" />\r\n\r\n                                    </div>\r\n                                        \r\n                                        <div className=\"row\">\r\n                                        &nbsp;&nbsp;<button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={this.newOrderClick}>Add &nbsp;&nbsp;<i className=\"fas fa-plus\"></i></button>&nbsp;&nbsp;&nbsp;\r\n                                        </div>\r\n\r\n                                    <div>\r\n                                    <div className=\"card-body table-responsive p-0\" style={{height: 250}}>\r\n                                        <table className=\"table table-head-fixed text-nowrap table-bordered\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                <th>#</th>\r\n                                                <th >Order Code <span className=\"text-danger\">*</span></th>\r\n                                                <th>Product </th>\r\n                                                <th>Color</th>\r\n                                                <th>Frame </th>\r\n                                                <th>Qty <span className=\"text-danger\">*</span></th>\r\n                                                <th>Price <span className=\"text-danger\">*</span></th>\r\n                                                <th>GST <span className=\"text-danger\">*</span></th>\r\n                                                <th>GST Amt </th>\r\n                                                <th>Amt</th>\r\n                                                <th></th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                         this.state.orderDetailsList.map( (ord,i) =>(\r\n                                                            <tr key={i}>\r\n                                                                <td className=\"\" style={{width: 50}}>{i+1}</td>\r\n                                                                <td className=\"\" style={{width: 200}}>\r\n                                                                    {/* <select className=\"form-control\" id=\"dealerId\" name=\"dealerId\" value={ord.productId} onChange={ (e)=>this.handleProductChange(i,e)} >\r\n                                                                        <option value=\"0\">Select Product</option>\r\n                                                                        {this.state.productList.map(o => (\r\n                                                                            <option value={o.productId}>{o.orderCode}</option>\r\n                                                                        ))} \r\n                                                                     </select> */}\r\n\r\n                                                                    <Select\r\n                                                                            value={this.state.productsearch.filter(({ value }) => value === ord.orderCode)}\r\n                                                                            onChange={(e)=>this.handleChange(i,e)}\r\n                                                                            options={this.state.productsearch}\r\n                                                                        />\r\n                                                                        \r\n                                                                </td>\r\n                                                                <td className=\"\" style={{width: 250}}>{ord.productName}</td>\r\n                                                                <td className=\"\" style={{width: 150}}>{ord.colors}</td>\r\n                                                                <td className=\"\" style={{width: 50}}>{ord.size}</td>\r\n                                                                <td className=\"\" style={{width: 100}}><input type=\"text\" className=\"form-control form-control-sm\" id=\"qty\" name=\"qty\" value= {ord.qty} onChange={(e)=>this.handleProductQtyChange(i,e)} placeholder=\"Enter Qty\" /></td>\r\n                                                                <td className=\"\" style={{width: 150}}><input type=\"text\" className=\"form-control form-control-sm \" id=\"price\" name=\"price\" value= {ord.price} onChange={(e)=>this.handleProductPriceChange(i,e)} placeholder=\"Enter Price\" /></td>\r\n                                                                <td className=\"\" style={{width: 150}}>\r\n                                                                    <select className=\"form-control\" id=\"gst\" name=\"gst\" value={ord.gst} onChange={(e)=>this.handleProductGSTChange(i,e)} >\r\n                                                                        <option value=\"GST_0\">GST 0% </option>\r\n                                                                        <option value=\"GST_1\">GST 1% </option>\r\n                                                                        <option value=\"GST_5\">GST 5% </option>\r\n                                                                        <option value=\"GST_12\">GST 12% </option>\r\n                                                                        <option value=\"GST_18\">GST 18% </option>\r\n                                                                        <option value=\"GST_28\">GST 28% </option>\r\n                                                                        <option value=\"IGST_0\">IGST 0%</option>\r\n                                                                        <option value=\"IGST_1\">IGST 1%</option>\r\n                                                                        <option value=\"IGST_5\">IGST 5%</option>\r\n                                                                        <option value=\"IGST_12\">IGST 12%</option>\r\n                                                                        <option value=\"IGST_18\">IGST 18%</option>\r\n                                                                        <option value=\"IGST_28\">IGST 28%</option> \r\n                                                                    </select>\r\n                                                                </td>\r\n                                                                <td className=\"\" style={{width: 100}}>{ord.gstAmt}</td>\r\n                                                                <td className=\"\" style={{width: 100}}>{ord.amount}</td>\r\n                                                                <td style={{width: 5}}>\r\n                                                                    <button className=\"btn btn-danger btn-sm\" onClick={(e)=>this.removeProductRow(i)}> <i className=\"far fa-trash-alt\"></i></button>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                         ))\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                                 \r\n                                    </div>\r\n                                   </div>\r\n                                </div>\r\n                         </div>\r\n                        <div className=\"modal-footer justify-content-between\">\r\n                            <span className=\"\"> No of Lines  : {this.state.orderDetailsList.length} </span> \r\n                            <span className=\"text-danger\">{this.state.errormsg}</span><br></br>\r\n                                                    \r\n                            <form>\r\n                                <div className=\"row\">\r\n                                    <label for=\"staticEmail\" className=\"col-sm-4 col-form-label\">Sub Total</label>\r\n                                    <div className=\"col-sm-6\">\r\n                                        <input type=\"text\"  className=\"form-control\" id=\"subtotal\" name=\"subtotal\" value={this.state.subtotal} placeholder=\"Sub Total\" disabled/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <label for=\"inputPassword\" className=\"col-sm-4 col-form-label\">Tax Total</label>\r\n                                    <div className=\"col-sm-6\">\r\n                                    <input type=\"text\" className=\"form-control\" id=\"taxTotal\" name=\"taxTotal\" value={this.state.taxTotal} placeholder=\"Tax Total\" disabled/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <label for=\"inputPassword\" className=\"col-sm-4 col-form-label\">Total</label>\r\n                                    <div className=\"col-sm-6\">\r\n                                    <input type=\"text\" className=\"form-control\" id=\"total\" name=\"total\"  value={this.state.total} placeholder=\"Total\" disabled/>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n\r\n                           \r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      profile: state.user.profile,\r\n      apiurl: state.user.apiurl\r\n    }\r\n  }\r\n\r\n export default connect(mapStateToProps)(DealerOrder);\r\n\r\n// export default DealerOrder\r\n","E:\\Friends\\Selva\\steedApp\\src\\components\\materials\\Material.js",["283","284","285"],"import React, { Component } from 'react'\r\n\r\nimport { connect } from \"react-redux\";\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport $ from \"jquery\";\r\n\r\nexport class Material extends Component {\r\n\r\n    constructor(props) {\r\n        \r\n        super(props)\r\n          this.columns = [\r\n            {\r\n                key: \"materialCode\",\r\n                text: \"Code\",\r\n                sortable: true\r\n            },\r\n            {\r\n                key: \"rawMaterialName\",\r\n                text: \"Name\",\r\n                sortable: true\r\n            },{\r\n                key: \"materialType\",\r\n                text: \"Material Type\",\r\n                sortable: true\r\n            }  ,{\r\n                key: \"measurementType\",\r\n                text: \"MeasureMent Type\",\r\n                sortable: true\r\n            } ,{\r\n                key: \"measurementName\",\r\n                text: \"Units\",\r\n                sortable: true\r\n            }\r\n            ,{\r\n                key: \"price\",\r\n                text: \"price\",\r\n                sortable: true\r\n            },\r\n            {\r\n                key: \"supplierName\",\r\n                text: \"supplier Name\",\r\n                sortable: true\r\n            },{\r\n                key: \"isBom\",\r\n                text: \"BOM\",\r\n                sortable: true\r\n            },\r\n            {\r\n                key: \"action\",\r\n                text: \"Action\",\r\n                cell: (record, index) => {\r\n                    return (\r\n                            <button\r\n                                className=\"btn btn-info btn-sm\"\r\n                                data-toggle=\"modal\" data-target=\"#material-new-model\"\r\n                                onClick={this.editRecord.bind(this, record, index)}\r\n                                style={{marginRight: '5px'}}>\r\n                                    <i className=\"fas fa-pencil-alt\" ></i>&nbsp;Edit\r\n                            </button>\r\n                       \r\n                    );\r\n                }\r\n            }\r\n        ];\r\n\r\n        this.config = {\r\n            key_column: 'rawMaterialId',\r\n            page_size: 10,\r\n            length_menu: [10, 20, 50],\r\n            show_filter: true,\r\n            show_pagination: true,\r\n            pagination: 'advance',\r\n            filename: \"Raw Material\",\r\n            button: {\r\n                excel: true,\r\n                print: true,\r\n                csv: true\r\n            }\r\n        }\r\n        this.state = {\r\n            rawMaterialId:0,\r\n            rawMaterialName:\"\",\r\n            materialCode:\"\",\r\n            itemType:\"\",\r\n            remarks:\"\",\r\n            measurementType:\"\",\r\n            units:\"\",\r\n            price:\"\",\r\n            referenceLevel:\"\",\r\n            supplierId:\"\",\r\n            hsnCode:\"\",\r\n            isBom:\"\",\r\n            isBasic:false,\r\n            isPremium:false,\r\n            isCommon:false,\r\n            isActive:true,\r\n\r\n            supplierName:\"\",\r\n            supplierList:[],\r\n            showModal:false,\r\n            errormsg:\"\",\r\n            records:[],\r\n            isLoaded:false,\r\n            loginUser:this.props.profile,\r\n\r\n            materialTypeList:[],\r\n            uomList:[],\r\n            unitList:[],\r\n            seqList:[],\r\n        }\r\n       \r\n    }\r\n    componentDidMount() {\r\n        this.getTableValues();\r\n//        console.log('props profile-->:'+this.props.apiurl)\r\n        $(\"#as-react-datatable-container\").find('select').addClass(\"form-control-sm\");\r\n        $(\"#as-react-datatable-container\").find('input').addClass(\"form-control-sm\");\r\n\r\n     }  \r\n    getTableValues(){\r\n        fetch(this.props.apiurl+\"rawmaterial/allRawMaterial\")\r\n        .then(res => res.json())\r\n        .then( (result) => {\r\n              //  console.log(\"result-->\"+JSON.stringify(result))\r\n                if(result.valid){\r\n                    this.setState({\r\n                        records: result.rawMaterialList,\r\n                        supplierList:result.supplierList,\r\n                        materialTypeList:result.materialTypeList,\r\n                        uomList:result.uomList,\r\n                        seqList:result.seqList\r\n                    },()=>{ $(\"#as-react-datatable td\").css({\"padding\":'0.50rem'});});\r\n                }else{}\r\n            },(error) => {\r\n            }\r\n        )\r\n    }\r\n\r\n    handleFormChange = event => {\r\n\r\n        if(event.target.name === \"itemType\"){\r\n\r\n            let mcode=this.state.seqList.filter(item => item.value == event.target.options[event.target.selectedIndex].text )\r\n            console.log(\"mcode.currentNext--\"+mcode[0].currentNext)\r\n            this.setState({materialCode: event.target.options[event.target.selectedIndex].text+mcode[0].currentNext});\r\n        }\r\n        this.setState({[event.target.name]: event.target.value});\r\n\r\n\r\n    };\r\n\r\n    handleFormChange1 = event => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n\r\n        if( event.target.value === 0 && event.target.value === \"0\"){\r\n            this.setState({unitList:[] });\r\n        }else{\r\n            this.setState({unitList: this.state.uomList.filter(item => item.measurementType == event.target.value )        });\r\n        }\r\n        \r\n\r\n    };\r\n\r\n\r\n\r\n    handleCheckClick = () => {\r\n        this.setState({ isActive: !this.state.isActive });\r\n    }\r\n    handlebomClick= () => {\r\n        this.setState({ isBom: !this.state.isBom },()=>{\r\n            if(!this.state.isBom){\r\n                this.setState({ \r\n                    isBasic:false,\r\n                    isPremium:false,\r\n                    isCommon:false\r\n                 });\r\n            }\r\n        });\r\n    }\r\n\r\n    handlebasicClick= () => {\r\n        this.setState({ isBasic: !this.state.isBasic },()=>{\r\n            if(this.state.isBasic)\r\n            { this.setState({ isPremium: false,isCommon:false})            }\r\n        });\r\n    }\r\n\r\n    handlecommonClick= () => {\r\n        \r\n        this.setState({ isCommon: !this.state.isCommon },()=>{\r\n            if(this.state.isCommon)\r\n            { this.setState({ isBasic: false,isPremium:false})            }\r\n        });\r\n\r\n    }\r\n\r\n    handlepremiumClick= () => {\r\n       \r\n        this.setState({ isPremium: !this.state.isPremium },()=>{\r\n            if(this.state.isPremium)\r\n            { this.setState({ isBasic: false,isCommon:false})            }\r\n        });\r\n\r\n    }\r\n\r\n  \r\n    resetClick= () => {\r\n        this.setState({ \r\n            rawMaterialId:0,\r\n            rawMaterialName:\"\",\r\n            materialCode:\"\",\r\n            itemType:\"\",\r\n            remarks:\"\",\r\n            measurementType:\"\",\r\n            units:\"\",\r\n            price:\"\",\r\n            referenceLevel:\"\",\r\n            supplierId:\"\",\r\n            hsnCode:\"\",\r\n            isBom:\"\",\r\n           isActive:true,\r\n           errormsg:\"\",\r\n           isBasic:false,\r\n            isPremium:false,\r\n            isCommon:false,\r\n        });\r\n   }\r\n   editRecord = (record, index) => {\r\n    // console.log(\"Edit record\", index, record);\r\n    // console.log(\"-->\"+JSON.stringify(record))\r\n    var tempstatus=true;\r\n    if(record.isActive === \"Active\"){\r\n         tempstatus=true;\r\n     }else{\r\n         tempstatus=false;\r\n     }\r\n     this.setState({\r\n        rawMaterialId:record.rawMaterialId,\r\n        rawMaterialName:record.rawMaterialName,\r\n        materialCode:record.materialCode,\r\n        itemType:record.itemType,\r\n        remarks:record.remarks,\r\n        measurementType:record.measurementType,\r\n        units:record.units,\r\n        price:record.price,\r\n        referenceLevel:record.referenceLevel,\r\n        supplierId:record.supplierId,\r\n        hsnCode:record.hsnCode,\r\n        isBom:record.isBom,\r\n        isActive:tempstatus,\r\n        isBasic:record.isBasic,\r\n        isPremium:record.isPremium,\r\n        isCommon:record.isCommon,\r\n        errormsg:\"\",\r\n     },()=>{\r\n        if( record.measurementType === 0 && record.measurementType === \"0\"){\r\n            this.setState({unitList:[] });\r\n        }else{\r\n            this.setState({unitList: this.state.uomList.filter(item => item.measurementType == record.measurementType )        });\r\n        }\r\n     });\r\n }\r\n\r\n saveClick= event =>{\r\n      //console.log(\"state-->\"+JSON.stringify(this.state))\r\n      if(this.state.itemType === \"0\" || this.state.itemType === \"\"){\r\n        this.setState({\r\n            errormsg: \"Select Material Type\"\r\n        });\r\n    } else if(this.state.rawMaterialName === \"\"){\r\n          this.setState({\r\n              errormsg: \"Enter Material Name\"\r\n          });\r\n      } else if(this.state.measurementType === \"0\" || this.state.measurementType === \"\"){\r\n        this.setState({\r\n            errormsg: \"Select Measurement Type\"\r\n        });\r\n    }else if(this.state.units === \"0\" || this.state.units === \"\"){\r\n        this.setState({\r\n            errormsg: \"Select Units\"\r\n        });\r\n    }else if(this.state.supplierId === \"0\" || this.state.supplierId === \"\"){\r\n        this.setState({\r\n            errormsg: \"Select Supplier\"\r\n        });\r\n    }else if(!this.state.isActive && this.state.rawMaterialId===0){\r\n          this.setState({\r\n              errormsg: \"Select Active\"\r\n          });\r\n    }else if(this.state.isBom && (!this.state.isBasic &&  !this.state.isCommon && !this.state.isPremium)){\r\n        this.setState({\r\n            errormsg: \"Select Anyone BOM Details\"\r\n        });\r\n  }else{\r\n          var tempstatus=\"\";\r\n          if(this.state.isActive){\r\n              tempstatus=\"Active\"\r\n          }else{\r\n              tempstatus=\"InActive\"\r\n          }\r\n          \r\n          var tempstatus1=\"\";\r\n          if(this.state.isBom){\r\n              tempstatus1=\"Active\"\r\n          }else{\r\n              tempstatus1=\"InActive\"\r\n          }\r\n        //   var tempstatus11=\"\";\r\n        //   if(this.state.variedMeasurement){\r\n        //       tempstatus11=\"Active\"\r\n        //   }else{\r\n        //       tempstatus11=\"InActive\"\r\n        //   }\r\n      \r\n\r\n          const obj = {\r\n                'materialCode':this.state.materialCode,'rawMaterialName':this.state.rawMaterialName,'itemType':this.state.itemType, \r\n              'measurementType':this.state.measurementType,'remarks':this.state.remarks, \r\n              'units':this.state.units,'price':this.state.price,'referenceLevel':this.state.referenceLevel,'supplierId':this.state.supplierId,'hsnCode':this.state.hsnCode,'isBom':tempstatus1   , \r\n              \"isActive\":tempstatus,'rawMaterialId':this.state.rawMaterialId,\r\n              'isBasic':this.state.isBasic,'isCommon':this.state.isCommon,'isPremium':this.state.isPremium,\r\n              \r\n              \"updatedBy\":this.state.loginUser.userId,\"createdBy\":this.state.loginUser.userId};\r\n\r\n           // POST request using fetch with error handling\r\n              const requestOptions = {\r\n                  method: 'POST',\r\n                  headers: { 'Content-Type': 'application/json' },\r\n                  body: JSON.stringify({ \"rawMaterialObj\": obj })\r\n              };\r\n              fetch(this.props.apiurl+\"rawmaterial/saveRawMaterial\", requestOptions)\r\n                  .then(async response => {\r\n                      const data = await response.json();\r\n                 //     console.log(\"--data--\"+JSON.stringify(data))\r\n                      // check for error response\r\n                      if (!response.ok) {\r\n                          // get error message from body or default to response status\r\n                          const error = (data && data.message) || response.status;\r\n                          return Promise.reject(error);\r\n                      }\r\n\r\n                      if(data.valid){\r\n                           //  console.log(\"c role->\"+obj)\r\n                           this.resetClick();\r\n                           this.setState({\r\n                              errormsg: \"Raw Material Details Saved Successfully\",\r\n                              records: data.rawMaterialList,\r\n                              seqList:data.seqList\r\n                          },()=>{\r\n                              \r\n                          });\r\n                         \r\n                      }else{\r\n                         this.setState({ errormsg: data.responseMsg});\r\n                        // this.resetClick();\r\n                      } \r\n                  })\r\n                  .catch(error => {\r\n                      this.setState({ errormsg: error.toString() });\r\n                    //  console.error('There was an error!', error);\r\n                  });\r\n                  \r\n        \r\n      }\r\n  }\r\n\r\n  refreshClick = () => {\r\n    this.resetClick();\r\n    this.componentDidMount();\r\n}\r\n\r\n\r\n\r\n    render() {\r\n\r\n        let optionTemplate = this.state.materialTypeList.map(o => (\r\n            <option value={o.materialTypeId}>{o.materialTypeName}</option>\r\n          ));\r\n\r\n          let optionTemplate1 = this.state.unitList.map(o => (\r\n            <option value={o.unitOfMeasurementId}>{o.measurementName}</option>\r\n          ));\r\n\r\n        return (\r\n            <div>\r\n                     <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                            <div className=\"card-title\">\r\n                                        <div className=\"input-group input-group-sm\">\r\n                                            <span className=\"input-group-append\">\r\n                                                <button type=\"button\" className=\"btn btn-primary btn-flat\" onClick={this.resetClick} data-toggle=\"modal\" data-target=\"#material-new-model\">Create New  Material&nbsp;&nbsp;<i className=\"fas fa-plus\"></i></button>&nbsp;&nbsp;&nbsp;\r\n                                                <button type=\"button\" className=\"btn btn-success\" onClick={this.refreshClick}><i className=\"fas fa-sync\"></i>&nbsp;Refresh</button>\r\n                                            </span>\r\n                                        </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <ReactDatatable\r\n                                    config={this.config}\r\n                                    records={this.state.records}\r\n                                    columns={this.columns}/>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </section>\r\n\r\n                <div className=\"modal fade\" id=\"material-new-model\">\r\n                    <div className=\"modal-dialog modal-xl\">\r\n                        <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">New Material</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">×</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"form-inline\">\r\n                                        \r\n                                        <label htmlFor=\"code\" className=\"m-2 col-sm-2 font-weight-normal\" >Material Type<span className=\"text-danger\">*</span></label>\r\n                                        <select className=\"form-control m-2 col-sm-3\" id=\"itemType\" name=\"itemType\" value={this.state.itemType} onChange={this.handleFormChange}>\r\n                                             <option value=\"0\">Select</option>\r\n                                              {optionTemplate}\r\n                                        </select>\r\n                                        <label htmlFor=\"code\" className=\"m-2 col-sm-2 font-weight-normal\" >Material Code<span className=\"text-danger\">*</span></label>\r\n                                        <input type=\"text\" className=\"form-control form-control-sm m-2 col-sm-3\" id=\"materialCode\" name=\"materialCode\" value={this.state.materialCode} onChange={this.handleFormChange} />\r\n                                        <label htmlFor=\"code\" className=\"m-2 col-sm-2 font-weight-normal\" >Material Name<span className=\"text-danger\">*</span></label>\r\n                                        <input type=\"text\" className=\"form-control form-control-sm m-2 col-sm-3\" id=\"rawMaterialName\" name=\"rawMaterialName\" value={this.state.rawMaterialName} onChange={this.handleFormChange} />\r\n                                       \r\n                                        <label htmlFor=\"name\" className=\"m-2 col-sm-2 font-weight-normal\" >Remarks</label>\r\n                                        <input type=\"text\" className=\"form-control form-control-sm m-2 col-sm-3\" id=\"remarks\" name=\"remarks\" value={this.state.remarks} onChange={this.handleFormChange} />\r\n                                        <label htmlFor=\"code\" className=\"m-2 col-sm-2 font-weight-normal\" >MeasureMent Type<span className=\"text-danger\">*</span></label>\r\n                                        <select className=\"form-control m-2 col-sm-3\" id=\"measurementType\" name=\"measurementType\" value={this.state.measurementType} onChange={this.handleFormChange1} >\r\n                                            <option value=\"0\">Select</option>\r\n                                            <option value=\"Mass\">Mass</option>\r\n                                            <option value=\"Volume\">Volume</option>\r\n                                            <option value=\"Unit\">Unit</option>\r\n                                            <option value=\"Distance\">Distance</option>\r\n                                        </select>\r\n                                        <label htmlFor=\"name\" className=\"m-2 col-sm-2 font-weight-normal\" >Units <span className=\"text-danger\">*</span></label>\r\n                                        <select className=\"form-control m-2 col-sm-3\" id=\"units\" name=\"units\" value={this.state.units} onChange={this.handleFormChange} >\r\n                                            <option value=\"0\">Select</option>\r\n                                             {optionTemplate1}\r\n                                        </select>\r\n\r\n                                        \r\n                                        <label htmlFor=\"name\" className=\"m-2 col-sm-2 font-weight-normal\" >Price</label>\r\n                                        <input type=\"text\" className=\"form-control form-control-sm m-2 col-sm-3\" id=\"price\" name=\"price\" value={this.state.price} onChange={this.handleFormChange}/>\r\n                                        <label htmlFor=\"name\" className=\"m-2 col-sm-2 font-weight-normal\" >Reference Level</label>\r\n                                        <input type=\"text\" className=\"form-control form-control-sm m-2 col-sm-3\" id=\"referenceLevel\" name=\"referenceLevel\" value={this.state.referenceLevel} onChange={this.handleFormChange} />\r\n                                        <label htmlFor=\"code\" className=\"m-2 col-sm-2 font-weight-normal\" >Supplier Name<span className=\"text-danger\">*</span></label>\r\n                                        <select className=\"form-control m-2 col-sm-3\" id=\"supplierId\" name=\"supplierId\" value={this.state.supplierId} onChange={this.handleFormChange}>\r\n                                            <option value=\"0\">Select</option>\r\n                                            {this.state.supplierList.map(o => (\r\n                                                <option value={o.supplierId}>{o.supplierName}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                        <label htmlFor=\"name\" className=\"m-2 col-sm-2 font-weight-normal\" >HSN Code</label>\r\n                                        <input type=\"text\" className=\"form-control form-control-sm m-2 col-sm-3\" id=\"hsnCode\" name=\"hsnCode\" value={this.state.hsnCode} onChange={this.handleFormChange} />\r\n                          \r\n                                      \r\n\r\n\r\n                                    </div>\r\n                                <form className=\"form-inline\">\r\n                                        <div className=\"form-check row\">\r\n                                            <input className=\"form-check-input\" type=\"checkbox\" id={this.state.isActive}  checked={this.state.isActive}  onChange={this.handleCheckClick}/>\r\n                                            <label className=\"form-check-label\" htmlFor=\"inlineFormCheck\">\r\n                                                Is Active\r\n                                            </label>\r\n                                            &nbsp;&nbsp;&nbsp;\r\n                                            <input className=\"form-check-input\" type=\"checkbox\" id={this.state.isBom}  checked={this.state.isBom}  onChange={this.handlebomClick} />\r\n                                            <label className=\"form-check-label\" htmlFor=\"inlineFormCheck\">\r\n                                                Is BOM\r\n                                            </label>\r\n                                            &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        {\r\n                                            this.state.isBom ?\r\n                                            <>\r\n                                                <input className=\"form-check-input\" type=\"checkbox\" id={this.state.isBasic}  checked={this.state.isBasic}  onChange={this.handlebasicClick} />\r\n                                                <label className=\"form-check-label\" htmlFor=\"inlineFormCheck\">\r\n                                                            Basic\r\n                                                </label>\r\n                                                &nbsp;&nbsp;\r\n                                                <input className=\"form-check-input\" type=\"checkbox\" id={this.state.isPremium}  checked={this.state.isPremium}  onChange={this.handlepremiumClick}  />\r\n                                                <label className=\"form-check-label\" htmlFor=\"inlineFormCheck\">\r\n                                                            Premium\r\n                                                </label> &nbsp;&nbsp;\r\n                                                <input className=\"form-check-input\" type=\"checkbox\" id={this.state.isCommon}  checked={this.state.isCommon}  onChange={this.handlecommonClick}  />\r\n                                                <label className=\"form-check-label\" htmlFor=\"inlineFormCheck\">\r\n                                                            Common\r\n                                                </label>\r\n                                            </>\r\n                                        :\"\"}\r\n\r\n                                        </div>\r\n                                </form>\r\n\r\n\r\n                            </div>\r\n                         </div>\r\n                        <div className=\"modal-footer justify-content-between\">\r\n                            <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n                            <span className=\"text-danger\">{this.state.errormsg}</span>\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.saveClick}>Save</button>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      profile: state.user.profile,\r\n      apiurl: state.user.apiurl\r\n    }\r\n  }\r\nexport default connect(mapStateToProps)(Material);\r\n\r\n//export default Material\r\n","E:\\Friends\\Selva\\steedApp\\src\\components\\admin\\NoteForApproval.js",["286"],"import React, { Component } from 'react'\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\n\r\nimport $ from 'jquery';\r\n\r\n\r\nexport class NoteForApproval extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.columns = [\r\n            {\r\n                key: \"nfaDocumentNo\",\r\n                text: \"Document No\",\r\n                sortable: true\r\n            },\r\n            {\r\n                key: \"nfaDocumentDate\",\r\n                text: \"Document Date\",\r\n                sortable: true\r\n            },\r\n            {\r\n                key: \"nfaTitle\",\r\n                text: \"Title\",\r\n                sortable: true\r\n            },\r\n            //  {\r\n            //      key: \"status\",\r\n            //      text: \"Status\",\r\n            //      sortable: true\r\n            //  },\r\n            // {\r\n            //     key: \"isActive\",\r\n            //     text: \"Active\",\r\n            //     sortable: true\r\n            // },\r\n            {\r\n                key: \"action\",\r\n                text: \"Action\",\r\n                cell: (record, index) => {\r\n                    return (\r\n                            <button\r\n                                className=\"btn btn-info btn-sm\"\r\n                                onClick={this.editRecord.bind(this, record, index)}\r\n                                style={{marginRight: '5px'}} data-toggle=\"modal\" data-target=\"#note-model\">\r\n                                    <i className=\"fas fa-pencil-alt\"></i>&nbsp;Edit\r\n                            </button>\r\n                       \r\n                    );\r\n                }\r\n            }\r\n        ];\r\n\r\n        this.config = {\r\n            key_column: 'nfaId',\r\n            page_size: 10,\r\n            length_menu: [10, 20, 50],\r\n            show_filter: true,\r\n            show_pagination: true,\r\n            pagination: 'advance',\r\n            filename: \"Note For Approval\",\r\n            button: {\r\n                excel: true,\r\n                print: true,\r\n                csv: true\r\n            }\r\n        }\r\n\r\n        \r\n        var curr = new Date();\r\n        curr.setDate(curr.getDate());\r\n        var todaydate = curr.toISOString().substr(0, 10);\r\n\r\n\r\n        this.state = {\r\n            nfaDescription: 'Welcome to Steed Application',\r\n            nfaDocumentNo:\"\",\r\n            nfaDocumentDate:todaydate,\r\n            nfaTitle:\"\",\r\n            status:0,\r\n            nfaId:0,\r\n            preparedBy:0,\r\n            active:true,\r\n            showModal:false,\r\n            errormsg:\"\",\r\n            records:[],\r\n            isLoaded:false,\r\n            loginUser:this.props.profile\r\n        }\r\n    }\r\n\r\n    resetClick  = () =>{\r\n\r\n        var curr = new Date();\r\n        curr.setDate(curr.getDate());\r\n        var todaydate = curr.toISOString().substr(0, 10);\r\n\r\n\r\n        this.setState({\r\n            nfaDescription: 'Welcome to Steed Application',\r\n            nfaDocumentNo:\"\",\r\n            nfaDocumentDate:todaydate,\r\n            nfaTitle:\"\",\r\n            status:0,\r\n            nfaId:0,\r\n            preparedBy:0,\r\n         });\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getTableValues();\r\n//        console.log('props profile-->:'+this.props.apiurl)\r\n    $(\"#as-react-datatable-container\").find('select').addClass(\"form-control-sm\");\r\n    $(\"#as-react-datatable-container\").find('input').addClass(\"form-control-sm\");\r\n\r\n     }  \r\n    getTableValues(){\r\n        fetch(this.props.apiurl+\"noteforapproval/allNoteForApprovals\")\r\n        .then(res => res.json())\r\n        .then( (result) => {\r\n               // console.log(\"result-->\"+JSON.stringify(result))\r\n                if(result.valid){\r\n                    this.setState({\r\n                        records: result.noteForApprovalList\r\n                    },()=>{\r\n                        $(\"#as-react-datatable td\").css({\"padding\":'0.50rem'});\r\n                    });\r\n                }else{}\r\n            },(error) => {\r\n            }\r\n        )\r\n    }\r\n\r\n    handleFormChange = event => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    handleCheckClick = () => {\r\n        this.setState({ isActive: !this.state.isActive });\r\n    }\r\n    editRecord = (record, index) => {\r\n        // console.log(\"Edit record\", index, record);\r\n        // console.log(\"-->\"+JSON.stringify(record))\r\n        var tempstatus=true;\r\n        if(record.status === \"Active\"){\r\n             tempstatus=true;\r\n         }else{\r\n             tempstatus=false;\r\n         }\r\n         this.setState({\r\n            nfaDescription:record.nfaDescription,\r\n            nfaDocumentNo:record.nfaDocumentNo,\r\n            nfaDocumentDate:record.nfaDocumentDate,\r\n            nfaTitle:record.nfaTitle,\r\n            nfaId:record.nfaId,\r\n            preparedBy:record.preparedBy,\r\n            status:record.status,\r\n             active:tempstatus\r\n         });\r\n \r\n     }\r\n\r\n     saveClick= event =>{\r\n        if(this.state.nfaDocumentNo === \"\"){\r\n            this.setState({\r\n                errormsg: \"Enter Document\"\r\n            });\r\n        }else if(this.state.nfaDocumentDate === \"\"){\r\n            this.setState({\r\n                errormsg: \"Select Document Date\"\r\n            });\r\n        }else if(this.state.nfaTitle === \"\"){\r\n            this.setState({\r\n                errormsg: \"Enter Title\"\r\n            });\r\n        }else if(this.state.nfaDescription === \"\"){\r\n            this.setState({\r\n                errormsg: \"Enter Description\"\r\n            });\r\n        }else if(this.state.preparedBy === \"0\" || this.state.preparedBy === 0){\r\n            this.setState({\r\n                errormsg: \"Select Request By\"\r\n            });\r\n        }\r\n        \r\n        // else if(!this.state.active && this.state.nfaId===0){\r\n        //     this.setState({\r\n        //         errormsg: \"Select Active\"\r\n        //     });\r\n        // }\r\n        else{\r\n            var tempstatus=\"\"\r\n            if(this.state.active){\r\n                tempstatus=\"Active\"\r\n            }else{\r\n                tempstatus=\"InActive\"\r\n            }\r\n            \r\n            const obj = {\r\n                'nfaDocumentNo':this.state.nfaDocumentNo,'nfaDocumentDate':this.state.nfaDocumentDate, \r\n                'nfaTitle':this.state.nfaTitle, 'nfaDescription':this.state.nfaDescription,  \r\n                 \"isActive\":tempstatus,'nfaId':this.state.nfaId,'status':this.state.status,\r\n                 \"preparedBy\":this.state.preparedBy,\r\n                 \"updatedBy\":this.state.loginUser.userId,\"createdBy\":this.state.loginUser.userId};\r\n\r\n                 ///console.log(\"--obj--\"+JSON.stringify(obj))\r\n\r\n             // POST request using fetch with error handling\r\n                const requestOptions = {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ \"noteForApprovalObj\": obj })\r\n                };\r\n                fetch(this.props.apiurl+\"noteforapproval/saveNoteForApproval\", requestOptions)\r\n                    .then(async response => {\r\n                        const data = await response.json();\r\n                       // console.log(\"--data--\"+JSON.stringify(data))\r\n                        // check for error response\r\n                        if (!response.ok) {\r\n                            // get error message from body or default to response status\r\n                            const error = (data && data.message) || response.status;\r\n                            return Promise.reject(error);\r\n                        }\r\n\r\n                        if(data.valid){\r\n                             //  console.log(\"c role->\"+obj)\r\n                             this.setState({\r\n                                errormsg: \"\",\r\n                                records: data.noteForApprovalList,\r\n                                nfaDescription:\"\",\r\n                                nfaDocumentNo:\"\",\r\n                                nfaDocumentDate:\"\",\r\n                                nfaTitle:\"\",\r\n                                nfaId:0,\r\n                                active:true\r\n                                \r\n                            },()=>{\r\n                               $(\"#note-model .close\").click();\r\n                            });\r\n                        }else{\r\n                            this.setState({ errormsg: data.responseMsg});\r\n                           \r\n                        }\r\n                           \r\n                    })\r\n                    .catch(error => {\r\n                        this.setState({ errormsg: error.toString() });\r\n                       // console.error('There was an error!', error);\r\n                    });\r\n                    \r\n          \r\n        }\r\n     }\r\n\r\n     refreshClick = () => {\r\n        this.resetClick();\r\n        this.componentDidMount();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n             \r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n               \r\n                        <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <div className=\"card-title\">\r\n                                    \r\n                                    <div className=\"input-group input-group-sm\">\r\n                                                {/* <input type=\"text\" className=\"form-control\" placeholder=\"Enter Role...\" /> */}\r\n                                                <span className=\"input-group-append\">\r\n                                                    <button type=\"button\" className=\"btn btn-primary btn-flat\" data-toggle=\"modal\" data-target=\"#note-model\" onClick={this.resetClick}>Create New Note &nbsp;&nbsp;<i className=\"fas fa-plus\"></i></button>&nbsp;&nbsp;&nbsp;\r\n                                                    <button type=\"button\" className=\"btn btn-success\" onClick={this.refreshClick}><i className=\"fas fa-sync\"></i>&nbsp;Refresh</button>\r\n                                                </span>\r\n                                            </div>\r\n                                    </div>\r\n                                  \r\n                                </div>\r\n                            \r\n                            <div className=\"card-body\" >\r\n                                <ReactDatatable\r\n                                    config={this.config}\r\n                                    records={this.state.records}\r\n                                    columns={this.columns}/>\r\n\r\n                            </div>\r\n                            <div className=\"card-footer clearfix\">\r\n                               \r\n                            </div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        </div>\r\n                   \r\n                       \r\n                    </div>\r\n                </section>\r\n\r\n                    <div className=\"modal fade\" id=\"note-model\">\r\n                    <div className=\"modal-dialog modal-xl\">\r\n                        <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h4 className=\"modal-title\">New Note</h4>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">×</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n\r\n            \r\n                       <div className=\"container-fluid\">\r\n                            <form className=\"form-inline\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"nfaDocumentNo\" className=\"m-2 font-weight-normal\">Document No <span className=\"text-danger\">*</span></label>\r\n                                    <input type=\"text\" className=\"form-control m-2 form-control-sm\" name=\"nfaDocumentNo\" id=\"nfaDocumentNo\" value= {this.state.nfaDocumentNo} onChange={this.handleFormChange} />\r\n                                    <label htmlFor=\"nfaDocumentDate\" className=\"m-2 font-weight-normal\">Document Date <span className=\"text-danger\">*</span></label>\r\n                                    <input type=\"date\" className=\"form-control m-2 form-control-sm\" name=\"nfaDocumentDate\" id=\"nfaDocumentDate\" value= {this.state.nfaDocumentDate} onChange={this.handleFormChange}/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"nfaTitle\" className=\"m-2 font-weight-normal\">Title <span className=\"text-danger\">*</span></label>\r\n                                    <input type=\"text\" className=\"form-control m-2 form-control-sm\" name=\"nfaTitle\" id=\"nfaTitle\" value= {this.state.nfaTitle} onChange={this.handleFormChange}/>\r\n                                    <label htmlFor=\"exampleSelectRounded\" className=\"m-2 font-weight-normal\">Request By</label>\r\n                                    <select className=\"custom-select \"  id=\"preparedBy\" name=\"preparedBy\" value={this.state.preparedBy} onChange={this.handleFormChange} >\r\n                                        <option value=\"0\">Select</option>\r\n                                        <option value=\"1\">User 1</option>\r\n                                        <option value=\"2\">User 2</option>   \r\n                                    </select>\r\n                                </div>\r\n                                \r\n                                \r\n                                \r\n                            </form>\r\n                                <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"card\">\r\n                                    <div className=\"card-header\">\r\n                                        <h3 className=\"card-title\"></h3>\r\n                                        <div className=\"card-tools\">\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"card-body table-responsive p-0\" style={{height:300}}>\r\n                                        <CKEditor\r\n                                                editor={ ClassicEditor }\r\n                                                style={{\r\n                                                    'height': '300px'                                                    \r\n                                                }}\r\n                                                activeClass=\"p10\"\r\n                                                data={this.state.nfaDescription}\r\n                                                onReady={ editor => {\r\n                                                    // You can store the \"editor\" and use when it is needed.\r\n                                                    //console.log( 'Editor is ready to use!', editor );\r\n                                                } }\r\n                                                onChange={ ( event, editor ) => {\r\n                                                    const data = editor.getData();\r\n                                                   // console.log( { event, editor, data } );\r\n                                                    this.setState({\r\n                                                        nfaDescription: data\r\n                                                    });\r\n                                                } }\r\n                                                onBlur={ ( event, editor ) => {\r\n                                                   // console.log( 'Blur.', editor );\r\n                                                } }\r\n                                                onFocus={ ( event, editor ) => {\r\n                                                   // console.log( 'Focus.', editor );\r\n                                                } }\r\n                                            />\r\n                                    </div>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                                </div>\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                        \r\n                            </div>\r\n                            <div className=\"modal-footer justify-content-between\">\r\n                                <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n                                 <span className=\"text-danger\">{this.state.errormsg}</span>\r\n                                <button type=\"button\" className=\"btn btn-primary\"  onClick={this.saveClick}>Save</button>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                     </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      profile: state.user.profile,\r\n      apiurl: state.user.apiurl\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(NoteForApproval);\r\n\r\n\r\n//export default NoteForApproval\r\n","E:\\Friends\\Selva\\steedApp\\src\\components\\materials\\MaterialType.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\materials\\PaymentTerm.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\materials\\UOM.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\commercial\\Dealer.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\admin\\Roles.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\materials\\Supplier.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\UserProfile.js",["287","288","289","290"],"import React, { Component } from 'react'\r\n\r\nexport class UserProfile extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\"><br></br>\r\n                        <h3>User Profile</h3><br></br>\r\n                        <div className=\"row ml-2\">\r\n                            \r\n                            <br></br>\r\n                           <div className=\"col-md-3\">\r\n                           \r\n                                <div className=\"card card-primary card-outline\">\r\n                                    <div className=\"card-body box-profile\">\r\n                                    <div className=\"text-center\">\r\n                                        {/* <img className=\"profile-user-img img-fluid img-circle\" src=\"../../dist/img/user4-128x128.jpg\" alt=\"User profile picture\" /> */}\r\n                                        <img alt=\"Avatar\" className=\"img-circle\" src=\"../../dist/img/avatar5.png\"></img>\r\n                                    </div>\r\n                                    <h3 className=\"profile-username text-center\">Selva</h3>\r\n                                    <p className=\"text-muted text-center\">Admin</p>\r\n                                    <ul className=\"list-group list-group-unbordered mb-3\">\r\n                                        <li className=\"list-group-item\">\r\n                                        <b>Followers</b> <a className=\"float-right\">1,322</a>\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                        <b>Following</b> <a className=\"float-right\">543</a>\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                        <b>Friends</b> <a className=\"float-right\">13,287</a>\r\n                                        </li>\r\n                                    </ul>\r\n                                    <a href=\"#\" className=\"btn btn-primary btn-block\"><b>Follow</b></a>\r\n                                    </div>\r\n                             \r\n                                </div>\r\n                          \r\n                               \r\n                                \r\n                           \r\n                            </div>\r\n\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"card card-primary\">\r\n                                    <div className=\"card-header\">\r\n                                    <h3 className=\"card-title\">About Me</h3>\r\n                                    </div>\r\n                                   \r\n                                    <div className=\"card-body\">\r\n                                    <strong><i className=\"fas fa-book mr-1\" /> Education</strong>\r\n                                    <p className=\"text-muted\">\r\n                                        B.S. in Computer Science from the University of Tennessee at Knoxville\r\n                                    </p>\r\n                                    <hr />\r\n                                    <strong><i className=\"fas fa-map-marker-alt mr-1\" /> Location</strong>\r\n                                    <ul className=\"ml-4 mb-0 fa-ul text-muted\">\r\n                                        <li className=\"small\"><span className=\"fa-li\"><i className=\"fas fa-lg fa-building\" /></span> Address: Demo Street 123, Demo City 04312, NJ</li>\r\n                                        <li className=\"small\"><span className=\"fa-li\"><i className=\"fas fa-lg fa-phone\" /></span> Phone #: + 800 - 12 12 23 52</li>\r\n                                        </ul>\r\n                                    <hr />\r\n                                    <strong><i className=\"fas fa-pencil-alt mr-1\" /> Skills</strong>\r\n                                    <p className=\"text-muted\">\r\n                                        <span className=\"tag tag-danger\">UI Design</span>\r\n                                        <span className=\"tag tag-success\">Coding</span>\r\n                                        <span className=\"tag tag-info\">Javascript</span>\r\n                                        <span className=\"tag tag-warning\">PHP</span>\r\n                                        <span className=\"tag tag-primary\">Node.js</span>\r\n                                    </p>\r\n                                    <hr />\r\n                                    <strong><i className=\"far fa-file-alt mr-1\" /> Notes</strong>\r\n                                    <p className=\"text-muted\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam fermentum enim neque.</p>\r\n                                    </div>\r\n                          \r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                         \r\n\r\n                        </div>\r\n                   \r\n                       \r\n                    </div>\r\n                </section>\r\n                   \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserProfile\r\n","E:\\Friends\\Selva\\steedApp\\src\\redux\\actions.js",[],"E:\\Friends\\Selva\\steedApp\\src\\components\\ConnectedIntermediateComponent.js",["291","292","293"],{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","replacedBy":"297"},{"ruleId":"298","severity":1,"message":"299","line":38,"column":21,"nodeType":"300","endLine":38,"endColumn":56},{"ruleId":"298","severity":1,"message":"299","line":50,"column":66,"nodeType":"300","endLine":50,"endColumn":98},{"ruleId":"298","severity":1,"message":"299","line":60,"column":59,"nodeType":"300","endLine":60,"endColumn":92},{"ruleId":"298","severity":1,"message":"299","line":64,"column":86,"nodeType":"300","endLine":64,"endColumn":126},{"ruleId":"298","severity":1,"message":"299","line":67,"column":91,"nodeType":"300","endLine":67,"endColumn":124},{"ruleId":"298","severity":1,"message":"299","line":74,"column":54,"nodeType":"300","endLine":74,"endColumn":87},{"ruleId":"298","severity":1,"message":"299","line":77,"column":91,"nodeType":"300","endLine":77,"endColumn":124},{"ruleId":"298","severity":1,"message":"299","line":80,"column":96,"nodeType":"300","endLine":80,"endColumn":129},{"ruleId":"298","severity":1,"message":"299","line":83,"column":91,"nodeType":"300","endLine":83,"endColumn":124},{"ruleId":"298","severity":1,"message":"299","line":87,"column":54,"nodeType":"300","endLine":87,"endColumn":87},{"ruleId":"298","severity":1,"message":"299","line":90,"column":90,"nodeType":"300","endLine":90,"endColumn":123},{"ruleId":"298","severity":1,"message":"299","line":93,"column":96,"nodeType":"300","endLine":93,"endColumn":129},{"ruleId":"298","severity":1,"message":"299","line":96,"column":91,"nodeType":"300","endLine":96,"endColumn":124},{"ruleId":"298","severity":1,"message":"299","line":100,"column":54,"nodeType":"300","endLine":100,"endColumn":87},{"ruleId":"298","severity":1,"message":"299","line":102,"column":66,"nodeType":"300","endLine":102,"endColumn":99},{"ruleId":"298","severity":1,"message":"299","line":103,"column":66,"nodeType":"300","endLine":103,"endColumn":99},{"ruleId":"298","severity":1,"message":"299","line":104,"column":66,"nodeType":"300","endLine":104,"endColumn":99},{"ruleId":"298","severity":1,"message":"299","line":107,"column":54,"nodeType":"300","endLine":107,"endColumn":87},{"ruleId":"298","severity":1,"message":"299","line":110,"column":89,"nodeType":"300","endLine":110,"endColumn":122},{"ruleId":"298","severity":1,"message":"299","line":113,"column":94,"nodeType":"300","endLine":113,"endColumn":127},{"ruleId":"298","severity":1,"message":"299","line":116,"column":86,"nodeType":"300","endLine":116,"endColumn":119},{"ruleId":"298","severity":1,"message":"299","line":120,"column":54,"nodeType":"300","endLine":120,"endColumn":87},{"ruleId":"298","severity":1,"message":"299","line":123,"column":91,"nodeType":"300","endLine":123,"endColumn":124},{"ruleId":"298","severity":1,"message":"299","line":126,"column":95,"nodeType":"300","endLine":126,"endColumn":128},{"ruleId":"298","severity":1,"message":"299","line":129,"column":89,"nodeType":"300","endLine":129,"endColumn":122},{"ruleId":"298","severity":1,"message":"299","line":133,"column":54,"nodeType":"300","endLine":133,"endColumn":87},{"ruleId":"298","severity":1,"message":"299","line":136,"column":82,"nodeType":"300","endLine":136,"endColumn":115},{"ruleId":"298","severity":1,"message":"299","line":143,"column":54,"nodeType":"300","endLine":143,"endColumn":87},{"ruleId":"298","severity":1,"message":"299","line":145,"column":66,"nodeType":"300","endLine":145,"endColumn":99},{"ruleId":"298","severity":1,"message":"299","line":146,"column":66,"nodeType":"300","endLine":146,"endColumn":99},{"ruleId":"298","severity":1,"message":"299","line":147,"column":66,"nodeType":"300","endLine":147,"endColumn":99},{"ruleId":"298","severity":1,"message":"299","line":119,"column":19,"nodeType":"300","endLine":119,"endColumn":46},{"ruleId":"301","severity":1,"message":"302","line":121,"column":21,"nodeType":"300","endLine":121,"endColumn":65},{"ruleId":"303","severity":1,"message":"304","line":2,"column":20,"nodeType":"305","messageId":"306","endLine":2,"endColumn":26},{"ruleId":"303","severity":1,"message":"307","line":2,"column":28,"nodeType":"305","messageId":"306","endLine":2,"endColumn":33},{"ruleId":"303","severity":1,"message":"308","line":28,"column":17,"nodeType":"305","messageId":"306","endLine":28,"endColumn":22},{"ruleId":"298","severity":1,"message":"299","line":38,"column":13,"nodeType":"300","endLine":38,"endColumn":83},{"ruleId":"298","severity":1,"message":"299","line":42,"column":27,"nodeType":"300","endLine":42,"endColumn":60},{"ruleId":"298","severity":1,"message":"299","line":45,"column":13,"nodeType":"300","endLine":45,"endColumn":46},{"ruleId":"298","severity":1,"message":"299","line":63,"column":13,"nodeType":"300","endLine":63,"endColumn":69},{"ruleId":"298","severity":1,"message":"299","line":68,"column":17,"nodeType":"300","endLine":68,"endColumn":55},{"ruleId":"298","severity":1,"message":"299","line":84,"column":17,"nodeType":"300","endLine":84,"endColumn":55},{"ruleId":"298","severity":1,"message":"299","line":100,"column":17,"nodeType":"300","endLine":100,"endColumn":55},{"ruleId":"298","severity":1,"message":"299","line":116,"column":17,"nodeType":"300","endLine":116,"endColumn":71},{"ruleId":"298","severity":1,"message":"299","line":121,"column":13,"nodeType":"300","endLine":121,"endColumn":69},{"ruleId":"298","severity":1,"message":"299","line":128,"column":17,"nodeType":"300","endLine":128,"endColumn":55},{"ruleId":"298","severity":1,"message":"299","line":133,"column":17,"nodeType":"300","endLine":133,"endColumn":55},{"ruleId":"298","severity":1,"message":"299","line":138,"column":17,"nodeType":"300","endLine":138,"endColumn":55},{"ruleId":"298","severity":1,"message":"299","line":143,"column":17,"nodeType":"300","endLine":143,"endColumn":71},{"ruleId":"298","severity":1,"message":"299","line":147,"column":13,"nodeType":"300","endLine":147,"endColumn":85},{"ruleId":"298","severity":1,"message":"299","line":152,"column":13,"nodeType":"300","endLine":152,"endColumn":131},{"ruleId":"298","severity":1,"message":"299","line":35,"column":45,"nodeType":"300","endLine":35,"endColumn":133},{"ruleId":"309","severity":1,"message":"310","line":173,"column":51,"nodeType":"311","messageId":"312","endLine":173,"endColumn":53},{"ruleId":"309","severity":1,"message":"313","line":121,"column":31,"nodeType":"311","messageId":"314","endLine":121,"endColumn":33},{"ruleId":"309","severity":1,"message":"313","line":122,"column":53,"nodeType":"311","messageId":"314","endLine":122,"endColumn":55},{"ruleId":"298","severity":1,"message":"299","line":80,"column":45,"nodeType":"300","endLine":80,"endColumn":143},{"ruleId":"298","severity":1,"message":"299","line":89,"column":45,"nodeType":"300","endLine":89,"endColumn":143},{"ruleId":"298","severity":1,"message":"299","line":98,"column":45,"nodeType":"300","endLine":98,"endColumn":143},{"ruleId":"303","severity":1,"message":"315","line":200,"column":17,"nodeType":"305","messageId":"306","endLine":200,"endColumn":20},{"ruleId":"303","severity":1,"message":"316","line":138,"column":19,"nodeType":"305","messageId":"306","endLine":138,"endColumn":29},{"ruleId":"303","severity":1,"message":"317","line":142,"column":41,"nodeType":"305","messageId":"306","endLine":142,"endColumn":46},{"ruleId":"318","severity":1,"message":"319","line":166,"column":75,"nodeType":"320","messageId":"321","endLine":166,"endColumn":77},{"ruleId":"318","severity":1,"message":"319","line":207,"column":70,"nodeType":"320","messageId":"321","endLine":207,"endColumn":72},{"ruleId":"318","severity":1,"message":"319","line":302,"column":74,"nodeType":"320","messageId":"321","endLine":302,"endColumn":76},{"ruleId":"309","severity":1,"message":"313","line":437,"column":53,"nodeType":"311","messageId":"314","endLine":437,"endColumn":55},{"ruleId":"318","severity":1,"message":"319","line":439,"column":90,"nodeType":"320","messageId":"321","endLine":439,"endColumn":92},{"ruleId":"318","severity":1,"message":"319","line":144,"column":68,"nodeType":"320","messageId":"321","endLine":144,"endColumn":70},{"ruleId":"318","severity":1,"message":"319","line":159,"column":93,"nodeType":"320","messageId":"321","endLine":159,"endColumn":95},{"ruleId":"318","severity":1,"message":"319","line":260,"column":93,"nodeType":"320","messageId":"321","endLine":260,"endColumn":95},{"ruleId":"322","severity":1,"message":"323","line":347,"column":41,"nodeType":"300","endLine":347,"endColumn":68},{"ruleId":"298","severity":1,"message":"324","line":25,"column":58,"nodeType":"300","endLine":25,"endColumn":85},{"ruleId":"298","severity":1,"message":"324","line":28,"column":58,"nodeType":"300","endLine":28,"endColumn":85},{"ruleId":"298","severity":1,"message":"324","line":31,"column":56,"nodeType":"300","endLine":31,"endColumn":83},{"ruleId":"298","severity":1,"message":"299","line":34,"column":37,"nodeType":"300","endLine":34,"endColumn":87},{"ruleId":"303","severity":1,"message":"325","line":6,"column":29,"nodeType":"305","messageId":"306","endLine":6,"endColumn":35},{"ruleId":"303","severity":1,"message":"326","line":8,"column":10,"nodeType":"305","messageId":"306","endLine":8,"endColumn":18},{"ruleId":"303","severity":1,"message":"327","line":9,"column":8,"nodeType":"305","messageId":"306","endLine":9,"endColumn":22},"no-native-reassign",["328"],"no-negated-in-lhs",["329"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'match' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside","'obj' is assigned a value but never used.","'tempstatus' is assigned a value but never used.","'index' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Router' is defined but never used.","'Provider' is defined but never used.","'configureStore' is defined but never used.","no-global-assign","no-unsafe-negation"]